{"ast":null,"code":"import React,{useState}from'react';import{Box,Typography,Card,CardContent,Chip,LinearProgress,Button,Dialog,DialogTitle,DialogContent,DialogContentText,DialogActions}from'@mui/material';import{EmojiEvents as TrophyIcon,Stars as StarsIcon,Lock as LockIcon,CheckCircle as CheckCircleIcon,Timeline as TimelineIcon,Savings as SavingsIcon,AccountBalance as AccountBalanceIcon,TrendingDown as TrendingDownIcon,TrendingUp as TrendingUpIcon,Whatshot as WhatshotIcon}from'@mui/icons-material';import Grid from'../common/StyledGrid';// Dummy achievements data\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const dummyAchievements=[{id:1,name:'Savings Starter',description:'Save your first ₹10,000',icon:/*#__PURE__*/_jsx(SavingsIcon,{}),progress:100,completed:true,completedDate:'2024-03-15',reward:'Bronze Badge',category:'Savings',points:100},{id:2,name:'Budget Master',description:'Stay under budget for 3 consecutive months',icon:/*#__PURE__*/_jsx(AccountBalanceIcon,{}),progress:66,completed:false,completedDate:null,reward:'Silver Badge',category:'Budget',points:200},{id:3,name:'Income Accelerator',description:'Increase your monthly income by 20%',icon:/*#__PURE__*/_jsx(TrendingUpIcon,{}),progress:75,completed:false,completedDate:null,reward:'Gold Badge',category:'Income',points:300},{id:4,name:'Expense Eliminator',description:'Reduce monthly expenses by 15%',icon:/*#__PURE__*/_jsx(TrendingDownIcon,{}),progress:40,completed:false,completedDate:null,reward:'Silver Badge',category:'Expenses',points:200},{id:5,name:'Investment Guru',description:'Make your first investment',icon:/*#__PURE__*/_jsx(TimelineIcon,{}),progress:100,completed:true,completedDate:'2024-02-10',reward:'Bronze Badge',category:'Investment',points:150},{id:6,name:'Tax Tamer',description:'Optimize tax savings using all available deductions',icon:/*#__PURE__*/_jsx(AccountBalanceIcon,{}),progress:90,completed:false,completedDate:null,reward:'Gold Badge',category:'Taxes',points:300},{id:7,name:'Consistent Earner',description:'Log income for 30 consecutive days',icon:/*#__PURE__*/_jsx(WhatshotIcon,{}),progress:100,completed:true,completedDate:'2024-03-28',reward:'Silver Badge',category:'Income',points:250},{id:8,name:'Emergency Fund Hero',description:'Build an emergency fund worth 6 months of expenses',icon:/*#__PURE__*/_jsx(StarsIcon,{}),progress:50,completed:false,completedDate:null,reward:'Platinum Badge',category:'Savings',points:500}];// Dummy user stats\nconst userStats={totalPoints:450,level:3,achievementsCompleted:3,achievementsInProgress:5,nextLevelPoints:750};const Achievements=()=>{const[filter,setFilter]=useState('all');const[selectedAchievement,setSelectedAchievement]=useState(null);const[openDialog,setOpenDialog]=useState(false);// Filter achievements by category\nconst filteredAchievements=filter==='all'?dummyAchievements:dummyAchievements.filter(achievement=>achievement.category===filter);// Get all unique categories\nconst categories=Array.from(new Set(dummyAchievements.map(a=>a.category)));// Handle viewing achievement details\nconst handleViewAchievement=achievement=>{setSelectedAchievement(achievement);setOpenDialog(true);};const handleCloseDialog=()=>{setOpenDialog(false);};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",fontWeight:\"bold\",children:\"Achievements\"}),/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(StarsIcon,{}),label:`Level ${userStats.level} • ${userStats.totalPoints} points`,color:\"primary\",variant:\"outlined\",sx:{fontWeight:'bold',fontSize:'1rem',py:2.5,px:1}})]}),/*#__PURE__*/_jsx(Card,{sx:{mb:4},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Your Progress\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2,mb:2},children:[/*#__PURE__*/_jsx(TrophyIcon,{fontSize:\"large\",color:\"primary\"}),/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(Typography,{children:[\"Level \",userStats.level]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Level \",userStats.level+1]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:userStats.totalPoints/userStats.nextLevelPoints*100,sx:{height:10,borderRadius:1}}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[userStats.totalPoints,\" / \",userStats.nextLevelPoints,\" points\"]})]})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-around',height:'100%',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"bold\",color:\"primary\",children:userStats.achievementsCompleted}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Completed\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"bold\",color:\"warning.main\",children:userStats.achievementsInProgress}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"In Progress\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"bold\",children:dummyAchievements.length}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Total\"})]})]})})]})})}),/*#__PURE__*/_jsxs(Box,{sx:{mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Filter by Category\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1},children:[/*#__PURE__*/_jsx(Chip,{label:\"All\",icon:/*#__PURE__*/_jsx(StarsIcon,{}),onClick:()=>setFilter('all'),color:filter==='all'?'primary':'default',variant:filter==='all'?'filled':'outlined'}),categories.map(category=>/*#__PURE__*/_jsx(Chip,{label:category,onClick:()=>setFilter(category),color:filter===category?'primary':'default',variant:filter===category?'filled':'outlined'},category))]})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[filter==='all'?'All Achievements':`${filter} Achievements`,\" (\",filteredAchievements.length,\")\"]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:filteredAchievements.map(achievement=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{sx:{height:'100%',display:'flex',flexDirection:'column',position:'relative',opacity:achievement.completed?1:0.9,transition:'transform 0.2s, box-shadow 0.2s','&:hover':{transform:'translateY(-4px)',boxShadow:4,cursor:'pointer'}},onClick:()=>handleViewAchievement(achievement),children:[achievement.completed&&/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),label:\"Completed\",color:\"success\",size:\"small\",sx:{position:'absolute',top:10,right:10,zIndex:1}}),/*#__PURE__*/_jsx(Box,{sx:{p:2,display:'flex',alignItems:'center',justifyContent:'center',bgcolor:achievement.completed?'success.light':'grey.100',color:achievement.completed?'success.contrastText':'grey.800'},children:/*#__PURE__*/_jsx(Box,{sx:{fontSize:40,display:'flex',justifyContent:'center'},children:achievement.icon})}),/*#__PURE__*/_jsxs(CardContent,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",component:\"div\",gutterBottom:true,sx:{display:'flex',alignItems:'center',justifyContent:'space-between'},children:[achievement.name,/*#__PURE__*/_jsx(Chip,{label:`+${achievement.points}`,size:\"small\",color:\"primary\",variant:\"outlined\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2},children:achievement.description}),/*#__PURE__*/_jsxs(Box,{sx:{mt:'auto'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:0.5},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"Progress\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[achievement.progress,\"%\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:achievement.progress,color:achievement.completed?\"success\":\"primary\",sx:{height:6,borderRadius:1}})]})]})]})},achievement.id))}),/*#__PURE__*/_jsx(Dialog,{open:openDialog,onClose:handleCloseDialog,maxWidth:\"sm\",fullWidth:true,children:selectedAchievement&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(DialogTitle,{sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',fontSize:24},children:selectedAchievement.icon}),selectedAchievement.name]}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Box,{sx:{p:2,mb:2,display:'flex',alignItems:'center',justifyContent:'center',bgcolor:selectedAchievement.completed?'success.light':'grey.100',borderRadius:1},children:/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{fontSize:60,mb:2,display:'flex',justifyContent:'center'},children:selectedAchievement.icon}),/*#__PURE__*/_jsx(Chip,{label:selectedAchievement.completed?\"Completed\":\"In Progress\",color:selectedAchievement.completed?\"success\":\"primary\",icon:selectedAchievement.completed?/*#__PURE__*/_jsx(CheckCircleIcon,{}):/*#__PURE__*/_jsx(LockIcon,{})})]})}),/*#__PURE__*/_jsx(DialogContentText,{gutterBottom:true,children:selectedAchievement.description}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Details:\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Category:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedAchievement.category})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Reward:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedAchievement.reward})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Points:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:selectedAchievement.points})]}),selectedAchievement.completed&&/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Completed on:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:new Date(selectedAchievement.completedDate).toLocaleDateString('en-IN',{year:'numeric',month:'long',day:'numeric'})})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:0.5},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"Progress\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",children:[selectedAchievement.progress,\"%\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:selectedAchievement.progress,color:selectedAchievement.completed?\"success\":\"primary\",sx:{height:8,borderRadius:1}})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,children:\"Close\"}),!selectedAchievement.completed&&/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",children:\"Set as Goal\"})]})]})})]});};export default Achievements;","map":{"version":3,"names":["React","useState","Box","Typography","Card","CardContent","Chip","LinearProgress","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","EmojiEvents","TrophyIcon","Stars","StarsIcon","Lock","LockIcon","CheckCircle","CheckCircleIcon","Timeline","TimelineIcon","Savings","SavingsIcon","AccountBalance","AccountBalanceIcon","TrendingDown","TrendingDownIcon","TrendingUp","TrendingUpIcon","Whatshot","WhatshotIcon","Grid","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","dummyAchievements","id","name","description","icon","progress","completed","completedDate","reward","category","points","userStats","totalPoints","level","achievementsCompleted","achievementsInProgress","nextLevelPoints","Achievements","filter","setFilter","selectedAchievement","setSelectedAchievement","openDialog","setOpenDialog","filteredAchievements","achievement","categories","Array","from","Set","map","a","handleViewAchievement","handleCloseDialog","children","sx","display","justifyContent","alignItems","mb","variant","component","fontWeight","label","color","fontSize","py","px","container","spacing","item","xs","md","gutterBottom","gap","flexGrow","value","height","borderRadius","textAlign","length","flexWrap","onClick","sm","flexDirection","position","opacity","transition","transform","boxShadow","cursor","size","top","right","zIndex","p","bgcolor","mt","open","onClose","maxWidth","fullWidth","Date","toLocaleDateString","year","month","day"],"sources":["C:/Users/mishr/OneDrive/Desktop/gig_website_tracker/gig-budget-app/src/components/gamification/Achievements.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Card, \r\n  CardContent, \r\n  CardMedia, \r\n  Chip, \r\n  LinearProgress, \r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions\r\n} from '@mui/material';\r\nimport { \r\n  EmojiEvents as TrophyIcon,\r\n  Stars as StarsIcon,\r\n  Lock as LockIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Timeline as TimelineIcon,\r\n  Savings as SavingsIcon,\r\n  AccountBalance as AccountBalanceIcon,\r\n  TrendingDown as TrendingDownIcon,\r\n  TrendingUp as TrendingUpIcon,\r\n  Whatshot as WhatshotIcon\r\n} from '@mui/icons-material';\r\nimport Grid from '../common/StyledGrid';\r\n\r\n// Dummy achievements data\r\nconst dummyAchievements = [\r\n  {\r\n    id: 1,\r\n    name: 'Savings Starter',\r\n    description: 'Save your first ₹10,000',\r\n    icon: <SavingsIcon />,\r\n    progress: 100,\r\n    completed: true,\r\n    completedDate: '2024-03-15',\r\n    reward: 'Bronze Badge',\r\n    category: 'Savings',\r\n    points: 100\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Budget Master',\r\n    description: 'Stay under budget for 3 consecutive months',\r\n    icon: <AccountBalanceIcon />,\r\n    progress: 66,\r\n    completed: false,\r\n    completedDate: null,\r\n    reward: 'Silver Badge',\r\n    category: 'Budget',\r\n    points: 200\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Income Accelerator',\r\n    description: 'Increase your monthly income by 20%',\r\n    icon: <TrendingUpIcon />,\r\n    progress: 75,\r\n    completed: false,\r\n    completedDate: null,\r\n    reward: 'Gold Badge',\r\n    category: 'Income',\r\n    points: 300\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Expense Eliminator',\r\n    description: 'Reduce monthly expenses by 15%',\r\n    icon: <TrendingDownIcon />,\r\n    progress: 40,\r\n    completed: false,\r\n    completedDate: null,\r\n    reward: 'Silver Badge',\r\n    category: 'Expenses',\r\n    points: 200\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Investment Guru',\r\n    description: 'Make your first investment',\r\n    icon: <TimelineIcon />,\r\n    progress: 100,\r\n    completed: true,\r\n    completedDate: '2024-02-10',\r\n    reward: 'Bronze Badge',\r\n    category: 'Investment',\r\n    points: 150\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Tax Tamer',\r\n    description: 'Optimize tax savings using all available deductions',\r\n    icon: <AccountBalanceIcon />,\r\n    progress: 90,\r\n    completed: false,\r\n    completedDate: null,\r\n    reward: 'Gold Badge',\r\n    category: 'Taxes',\r\n    points: 300\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Consistent Earner',\r\n    description: 'Log income for 30 consecutive days',\r\n    icon: <WhatshotIcon />,\r\n    progress: 100,\r\n    completed: true,\r\n    completedDate: '2024-03-28',\r\n    reward: 'Silver Badge',\r\n    category: 'Income',\r\n    points: 250\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Emergency Fund Hero',\r\n    description: 'Build an emergency fund worth 6 months of expenses',\r\n    icon: <StarsIcon />,\r\n    progress: 50,\r\n    completed: false,\r\n    completedDate: null,\r\n    reward: 'Platinum Badge',\r\n    category: 'Savings',\r\n    points: 500\r\n  }\r\n];\r\n\r\n// Dummy user stats\r\nconst userStats = {\r\n  totalPoints: 450,\r\n  level: 3,\r\n  achievementsCompleted: 3,\r\n  achievementsInProgress: 5,\r\n  nextLevelPoints: 750\r\n};\r\n\r\nconst Achievements: React.FC = () => {\r\n  const [filter, setFilter] = useState<string | 'all'>('all');\r\n  const [selectedAchievement, setSelectedAchievement] = useState<typeof dummyAchievements[0] | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  // Filter achievements by category\r\n  const filteredAchievements = filter === 'all'\r\n    ? dummyAchievements\r\n    : dummyAchievements.filter(achievement => achievement.category === filter);\r\n\r\n  // Get all unique categories\r\n  const categories = Array.from(new Set(dummyAchievements.map(a => a.category)));\r\n\r\n  // Handle viewing achievement details\r\n  const handleViewAchievement = (achievement: typeof dummyAchievements[0]) => {\r\n    setSelectedAchievement(achievement);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" fontWeight=\"bold\">\r\n          Achievements\r\n        </Typography>\r\n        <Chip \r\n          icon={<StarsIcon />} \r\n          label={`Level ${userStats.level} • ${userStats.totalPoints} points`}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          sx={{ fontWeight: 'bold', fontSize: '1rem', py: 2.5, px: 1 }}\r\n        />\r\n      </Box>\r\n\r\n      {/* User Progress */}\r\n      <Card sx={{ mb: 4 }}>\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <Box>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Your Progress\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\r\n                  <TrophyIcon fontSize=\"large\" color=\"primary\" />\r\n                  <Box sx={{ flexGrow: 1 }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                      <Typography>Level {userStats.level}</Typography>\r\n                      <Typography>Level {userStats.level + 1}</Typography>\r\n                    </Box>\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={(userStats.totalPoints / userStats.nextLevelPoints) * 100}\r\n                      sx={{ height: 10, borderRadius: 1 }}\r\n                    />\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {userStats.totalPoints} / {userStats.nextLevelPoints} points\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-around', height: '100%', alignItems: 'center' }}>\r\n                <Box sx={{ textAlign: 'center' }}>\r\n                  <Typography variant=\"h4\" fontWeight=\"bold\" color=\"primary\">\r\n                    {userStats.achievementsCompleted}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Completed\r\n                  </Typography>\r\n                </Box>\r\n                <Box sx={{ textAlign: 'center' }}>\r\n                  <Typography variant=\"h4\" fontWeight=\"bold\" color=\"warning.main\">\r\n                    {userStats.achievementsInProgress}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    In Progress\r\n                  </Typography>\r\n                </Box>\r\n                <Box sx={{ textAlign: 'center' }}>\r\n                  <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                    {dummyAchievements.length}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Category Filters */}\r\n      <Box sx={{ mb: 4 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Filter by Category\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n          <Chip \r\n            label=\"All\" \r\n            icon={<StarsIcon />}\r\n            onClick={() => setFilter('all')}\r\n            color={filter === 'all' ? 'primary' : 'default'}\r\n            variant={filter === 'all' ? 'filled' : 'outlined'}\r\n          />\r\n          {categories.map((category) => (\r\n            <Chip \r\n              key={category}\r\n              label={category}\r\n              onClick={() => setFilter(category)}\r\n              color={filter === category ? 'primary' : 'default'}\r\n              variant={filter === category ? 'filled' : 'outlined'}\r\n            />\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Achievements Grid */}\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {filter === 'all' ? 'All Achievements' : `${filter} Achievements`} ({filteredAchievements.length})\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        {filteredAchievements.map((achievement) => (\r\n          <Grid item xs={12} sm={6} md={4} key={achievement.id}>\r\n            <Card \r\n              sx={{ \r\n                height: '100%', \r\n                display: 'flex', \r\n                flexDirection: 'column',\r\n                position: 'relative',\r\n                opacity: achievement.completed ? 1 : 0.9,\r\n                transition: 'transform 0.2s, box-shadow 0.2s',\r\n                '&:hover': {\r\n                  transform: 'translateY(-4px)',\r\n                  boxShadow: 4,\r\n                  cursor: 'pointer'\r\n                }\r\n              }}\r\n              onClick={() => handleViewAchievement(achievement)}\r\n            >\r\n              {achievement.completed && (\r\n                <Chip \r\n                  icon={<CheckCircleIcon />} \r\n                  label=\"Completed\" \r\n                  color=\"success\"\r\n                  size=\"small\"\r\n                  sx={{ \r\n                    position: 'absolute', \r\n                    top: 10, \r\n                    right: 10, \r\n                    zIndex: 1 \r\n                  }}\r\n                />\r\n              )}\r\n              <Box \r\n                sx={{ \r\n                  p: 2, \r\n                  display: 'flex', \r\n                  alignItems: 'center', \r\n                  justifyContent: 'center',\r\n                  bgcolor: achievement.completed ? 'success.light' : 'grey.100',\r\n                  color: achievement.completed ? 'success.contrastText' : 'grey.800',\r\n                }}\r\n              >\r\n                <Box sx={{ fontSize: 40, display: 'flex', justifyContent: 'center' }}>\r\n                  {achievement.icon}\r\n                </Box>\r\n              </Box>\r\n              <CardContent sx={{ flexGrow: 1 }}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  component=\"div\" \r\n                  gutterBottom \r\n                  sx={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'space-between' \r\n                  }}\r\n                >\r\n                  {achievement.name}\r\n                  <Chip \r\n                    label={`+${achievement.points}`} \r\n                    size=\"small\" \r\n                    color=\"primary\" \r\n                    variant=\"outlined\"\r\n                  />\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                  {achievement.description}\r\n                </Typography>\r\n                <Box sx={{ mt: 'auto' }}>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      Progress\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {achievement.progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <LinearProgress \r\n                    variant=\"determinate\" \r\n                    value={achievement.progress} \r\n                    color={achievement.completed ? \"success\" : \"primary\"}\r\n                    sx={{ height: 6, borderRadius: 1 }}\r\n                  />\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Achievement Detail Dialog */}\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\r\n        {selectedAchievement && (\r\n          <>\r\n            <DialogTitle sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Box sx={{ display: 'flex', fontSize: 24 }}>\r\n                {selectedAchievement.icon}\r\n              </Box>\r\n              {selectedAchievement.name}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <Box \r\n                sx={{ \r\n                  p: 2, \r\n                  mb: 2,\r\n                  display: 'flex', \r\n                  alignItems: 'center', \r\n                  justifyContent: 'center',\r\n                  bgcolor: selectedAchievement.completed ? 'success.light' : 'grey.100',\r\n                  borderRadius: 1\r\n                }}\r\n              >\r\n                <Box sx={{ textAlign: 'center' }}>\r\n                  <Box sx={{ fontSize: 60, mb: 2, display: 'flex', justifyContent: 'center' }}>\r\n                    {selectedAchievement.icon}\r\n                  </Box>\r\n                  <Chip \r\n                    label={selectedAchievement.completed ? \"Completed\" : \"In Progress\"} \r\n                    color={selectedAchievement.completed ? \"success\" : \"primary\"}\r\n                    icon={selectedAchievement.completed ? <CheckCircleIcon /> : <LockIcon />}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n              <DialogContentText gutterBottom>\r\n                {selectedAchievement.description}\r\n              </DialogContentText>\r\n              \r\n              <Box sx={{ mt: 2 }}>\r\n                <Typography variant=\"subtitle2\" gutterBottom>\r\n                  Details:\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Category:</Typography>\r\n                  <Typography variant=\"body2\">{selectedAchievement.category}</Typography>\r\n                </Box>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Reward:</Typography>\r\n                  <Typography variant=\"body2\">{selectedAchievement.reward}</Typography>\r\n                </Box>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Points:</Typography>\r\n                  <Typography variant=\"body2\">{selectedAchievement.points}</Typography>\r\n                </Box>\r\n                {selectedAchievement.completed && (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">Completed on:</Typography>\r\n                    <Typography variant=\"body2\">\r\n                      {new Date(selectedAchievement.completedDate as string).toLocaleDateString('en-IN', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric'\r\n                      })}\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n              \r\n              <Box sx={{ mt: 3 }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\r\n                  <Typography variant=\"caption\">Progress</Typography>\r\n                  <Typography variant=\"caption\">{selectedAchievement.progress}%</Typography>\r\n                </Box>\r\n                <LinearProgress \r\n                  variant=\"determinate\" \r\n                  value={selectedAchievement.progress} \r\n                  color={selectedAchievement.completed ? \"success\" : \"primary\"}\r\n                  sx={{ height: 8, borderRadius: 1 }}\r\n                />\r\n              </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseDialog}>Close</Button>\r\n              {!selectedAchievement.completed && (\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Set as Goal\r\n                </Button>\r\n              )}\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Achievements; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}