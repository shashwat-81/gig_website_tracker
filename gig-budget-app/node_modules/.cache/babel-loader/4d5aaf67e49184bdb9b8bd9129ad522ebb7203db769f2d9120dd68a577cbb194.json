{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const ThemeContext=/*#__PURE__*/createContext({darkMode:false,toggleDarkMode:()=>{}});// Custom hook to use the theme context\nexport const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;// Check for user's system preference or stored preference\nconst prefersDarkMode=typeof window!=='undefined'&&window.matchMedia('(prefers-color-scheme: dark)').matches;// Initialize state from localStorage or system preference\nconst[darkMode,setDarkMode]=useState(()=>{if(typeof window!=='undefined'){const savedTheme=localStorage.getItem('darkMode');return savedTheme?JSON.parse(savedTheme):prefersDarkMode;}return false;});// Apply theme changes to the document root\nuseEffect(()=>{if(typeof window!=='undefined'){document.documentElement.setAttribute('data-theme',darkMode?'dark':'light');localStorage.setItem('darkMode',JSON.stringify(darkMode));}},[darkMode]);// Toggle theme function\nconst toggleDarkMode=()=>{setDarkMode(!darkMode);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{darkMode,toggleDarkMode},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsx","_jsx","ThemeContext","darkMode","toggleDarkMode","useTheme","context","undefined","Error","ThemeProvider","_ref","children","prefersDarkMode","window","matchMedia","matches","setDarkMode","savedTheme","localStorage","getItem","JSON","parse","document","documentElement","setAttribute","setItem","stringify","Provider","value"],"sources":["C:/Users/mishr/OneDrive/Desktop/gig_website_tracker/gig-budget-app/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode, useContext } from 'react';\r\n\r\ntype ThemeContextType = {\r\n  darkMode: boolean;\r\n  toggleDarkMode: () => void;\r\n};\r\n\r\nexport const ThemeContext = createContext<ThemeContextType>({\r\n  darkMode: false,\r\n  toggleDarkMode: () => {},\r\n});\r\n\r\n// Custom hook to use the theme context\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  // Check for user's system preference or stored preference\r\n  const prefersDarkMode = typeof window !== 'undefined' && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n  \r\n  // Initialize state from localStorage or system preference\r\n  const [darkMode, setDarkMode] = useState<boolean>(() => {\r\n    if (typeof window !== 'undefined') {\r\n      const savedTheme = localStorage.getItem('darkMode');\r\n      return savedTheme ? JSON.parse(savedTheme) : prefersDarkMode;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  // Apply theme changes to the document root\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      document.documentElement.setAttribute('data-theme', darkMode ? 'dark' : 'light');\r\n      localStorage.setItem('darkMode', JSON.stringify(darkMode));\r\n    }\r\n  }, [darkMode]);\r\n\r\n  // Toggle theme function\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAaC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAOzF,MAAO,MAAM,CAAAC,YAAY,cAAGN,aAAa,CAAmB,CAC1DO,QAAQ,CAAE,KAAK,CACfC,cAAc,CAAEA,CAAA,GAAM,CAAC,CACzB,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACG,YAAY,CAAC,CACxC,GAAII,OAAO,GAAKC,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAF,OAAO,CAChB,CAAC,CAMD,MAAO,MAAM,CAAAG,aAA2C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtE;AACA,KAAM,CAAAE,eAAe,CAAG,MAAO,CAAAC,MAAM,GAAK,WAAW,EAAIA,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAElH;AACA,KAAM,CAACZ,QAAQ,CAAEa,WAAW,CAAC,CAAGnB,QAAQ,CAAU,IAAM,CACtD,GAAI,MAAO,CAAAgB,MAAM,GAAK,WAAW,CAAE,CACjC,KAAM,CAAAI,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACnD,MAAO,CAAAF,UAAU,CAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAGL,eAAe,CAC9D,CACA,MAAO,MAAK,CACd,CAAC,CAAC,CAEF;AACAd,SAAS,CAAC,IAAM,CACd,GAAI,MAAO,CAAAe,MAAM,GAAK,WAAW,CAAE,CACjCS,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAErB,QAAQ,CAAG,MAAM,CAAG,OAAO,CAAC,CAChFe,YAAY,CAACO,OAAO,CAAC,UAAU,CAAEL,IAAI,CAACM,SAAS,CAACvB,QAAQ,CAAC,CAAC,CAC5D,CACF,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BY,WAAW,CAAC,CAACb,QAAQ,CAAC,CACxB,CAAC,CAED,mBACEF,IAAA,CAACC,YAAY,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAEzB,QAAQ,CAAEC,cAAe,CAAE,CAAAO,QAAA,CACxDA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}