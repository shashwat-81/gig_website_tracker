{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={incomePredictions:[],isLoading:false,error:null};export const predictionSlice=createSlice({name:'prediction',initialState,reducers:{fetchPredictionsStart:state=>{state.isLoading=true;state.error=null;},fetchPredictionsSuccess:(state,action)=>{state.isLoading=false;state.incomePredictions=action.payload;state.error=null;},fetchPredictionsFailure:(state,action)=>{state.isLoading=false;state.error=action.payload;},generatePredictionStart:state=>{state.isLoading=true;state.error=null;},generatePredictionSuccess:(state,action)=>{state.isLoading=false;// Remove any existing prediction for the same month/year\nconst existingIndex=state.incomePredictions.findIndex(p=>p.month===action.payload.month&&p.year===action.payload.year);if(existingIndex!==-1){state.incomePredictions[existingIndex]=action.payload;}else{state.incomePredictions.push(action.payload);}// Sort predictions by date\nstate.incomePredictions.sort((a,b)=>{if(a.year!==b.year)return a.year-b.year;return a.month-b.month;});},generatePredictionFailure:(state,action)=>{state.isLoading=false;state.error=action.payload;},clearPredictions:state=>{state.incomePredictions=[];}}});export const{fetchPredictionsStart,fetchPredictionsSuccess,fetchPredictionsFailure,generatePredictionStart,generatePredictionSuccess,generatePredictionFailure,clearPredictions}=predictionSlice.actions;export default predictionSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","incomePredictions","isLoading","error","predictionSlice","name","reducers","fetchPredictionsStart","state","fetchPredictionsSuccess","action","payload","fetchPredictionsFailure","generatePredictionStart","generatePredictionSuccess","existingIndex","findIndex","p","month","year","push","sort","a","b","generatePredictionFailure","clearPredictions","actions","reducer"],"sources":["C:/Users/mishr/OneDrive/Desktop/gig_website_tracker/gig-budget-app/src/store/slices/predictionSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { IncomePrediction } from '../../types';\r\n\r\ninterface PredictionState {\r\n  incomePredictions: IncomePrediction[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: PredictionState = {\r\n  incomePredictions: [],\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport const predictionSlice = createSlice({\r\n  name: 'prediction',\r\n  initialState,\r\n  reducers: {\r\n    fetchPredictionsStart: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchPredictionsSuccess: (state, action: PayloadAction<IncomePrediction[]>) => {\r\n      state.isLoading = false;\r\n      state.incomePredictions = action.payload;\r\n      state.error = null;\r\n    },\r\n    fetchPredictionsFailure: (state, action: PayloadAction<string>) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    generatePredictionStart: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    generatePredictionSuccess: (state, action: PayloadAction<IncomePrediction>) => {\r\n      state.isLoading = false;\r\n      \r\n      // Remove any existing prediction for the same month/year\r\n      const existingIndex = state.incomePredictions.findIndex(\r\n        p => p.month === action.payload.month && p.year === action.payload.year\r\n      );\r\n      \r\n      if (existingIndex !== -1) {\r\n        state.incomePredictions[existingIndex] = action.payload;\r\n      } else {\r\n        state.incomePredictions.push(action.payload);\r\n      }\r\n      \r\n      // Sort predictions by date\r\n      state.incomePredictions.sort((a, b) => {\r\n        if (a.year !== b.year) return a.year - b.year;\r\n        return a.month - b.month;\r\n      });\r\n    },\r\n    generatePredictionFailure: (state, action: PayloadAction<string>) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    clearPredictions: (state) => {\r\n      state.incomePredictions = [];\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  fetchPredictionsStart,\r\n  fetchPredictionsSuccess,\r\n  fetchPredictionsFailure,\r\n  generatePredictionStart,\r\n  generatePredictionSuccess,\r\n  generatePredictionFailure,\r\n  clearPredictions\r\n} = predictionSlice.actions;\r\n\r\nexport default predictionSlice.reducer; "],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAS7D,KAAM,CAAAC,YAA6B,CAAG,CACpCC,iBAAiB,CAAE,EAAE,CACrBC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IACT,CAAC,CAED,MAAO,MAAM,CAAAC,eAAe,CAAGL,WAAW,CAAC,CACzCM,IAAI,CAAE,YAAY,CAClBL,YAAY,CACZM,QAAQ,CAAE,CACRC,qBAAqB,CAAGC,KAAK,EAAK,CAChCA,KAAK,CAACN,SAAS,CAAG,IAAI,CACtBM,KAAK,CAACL,KAAK,CAAG,IAAI,CACpB,CAAC,CACDM,uBAAuB,CAAEA,CAACD,KAAK,CAAEE,MAAyC,GAAK,CAC7EF,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACP,iBAAiB,CAAGS,MAAM,CAACC,OAAO,CACxCH,KAAK,CAACL,KAAK,CAAG,IAAI,CACpB,CAAC,CACDS,uBAAuB,CAAEA,CAACJ,KAAK,CAAEE,MAA6B,GAAK,CACjEF,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACL,KAAK,CAAGO,MAAM,CAACC,OAAO,CAC9B,CAAC,CACDE,uBAAuB,CAAGL,KAAK,EAAK,CAClCA,KAAK,CAACN,SAAS,CAAG,IAAI,CACtBM,KAAK,CAACL,KAAK,CAAG,IAAI,CACpB,CAAC,CACDW,yBAAyB,CAAEA,CAACN,KAAK,CAAEE,MAAuC,GAAK,CAC7EF,KAAK,CAACN,SAAS,CAAG,KAAK,CAEvB;AACA,KAAM,CAAAa,aAAa,CAAGP,KAAK,CAACP,iBAAiB,CAACe,SAAS,CACrDC,CAAC,EAAIA,CAAC,CAACC,KAAK,GAAKR,MAAM,CAACC,OAAO,CAACO,KAAK,EAAID,CAAC,CAACE,IAAI,GAAKT,MAAM,CAACC,OAAO,CAACQ,IACrE,CAAC,CAED,GAAIJ,aAAa,GAAK,CAAC,CAAC,CAAE,CACxBP,KAAK,CAACP,iBAAiB,CAACc,aAAa,CAAC,CAAGL,MAAM,CAACC,OAAO,CACzD,CAAC,IAAM,CACLH,KAAK,CAACP,iBAAiB,CAACmB,IAAI,CAACV,MAAM,CAACC,OAAO,CAAC,CAC9C,CAEA;AACAH,KAAK,CAACP,iBAAiB,CAACoB,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACrC,GAAID,CAAC,CAACH,IAAI,GAAKI,CAAC,CAACJ,IAAI,CAAE,MAAO,CAAAG,CAAC,CAACH,IAAI,CAAGI,CAAC,CAACJ,IAAI,CAC7C,MAAO,CAAAG,CAAC,CAACJ,KAAK,CAAGK,CAAC,CAACL,KAAK,CAC1B,CAAC,CAAC,CACJ,CAAC,CACDM,yBAAyB,CAAEA,CAAChB,KAAK,CAAEE,MAA6B,GAAK,CACnEF,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACL,KAAK,CAAGO,MAAM,CAACC,OAAO,CAC9B,CAAC,CACDc,gBAAgB,CAAGjB,KAAK,EAAK,CAC3BA,KAAK,CAACP,iBAAiB,CAAG,EAAE,CAC9B,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXM,qBAAqB,CACrBE,uBAAuB,CACvBG,uBAAuB,CACvBC,uBAAuB,CACvBC,yBAAyB,CACzBU,yBAAyB,CACzBC,gBACF,CAAC,CAAGrB,eAAe,CAACsB,OAAO,CAE3B,cAAe,CAAAtB,eAAe,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}