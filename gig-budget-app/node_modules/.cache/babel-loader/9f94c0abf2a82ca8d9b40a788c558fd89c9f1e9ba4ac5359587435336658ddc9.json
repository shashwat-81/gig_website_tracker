{"ast":null,"code":"// Mock user data with specific categories\nconst USERS=[{id:1,name:'Rahul Kumar',email:'rahul@example.com',category:'Food Delivery',avatar:'https://randomuser.me/api/portraits/men/1.jpg'},{id:2,name:'Priya Singh',email:'priya@example.com',category:'Cab Driver',avatar:'https://randomuser.me/api/portraits/women/2.jpg'},{id:3,name:'Amit Patel',email:'amit@example.com',category:'House Cleaner',avatar:'https://randomuser.me/api/portraits/men/3.jpg'},{id:4,name:'Neha Sharma',email:'neha@example.com',category:'Food Delivery',avatar:'https://randomuser.me/api/portraits/women/4.jpg'},{id:5,name:'Vikram Desai',email:'vikram@example.com',category:'Cab Driver',avatar:'https://randomuser.me/api/portraits/men/5.jpg'},{id:6,name:'Lakshmi Reddy',email:'lakshmi@example.com',category:'House Cleaner',avatar:'https://randomuser.me/api/portraits/women/6.jpg'}];// Mock authentication service\nlet currentUser=null;export const getCurrentUser=()=>{return currentUser||localStorage.getItem('user');};export const login=credentials=>{// Mock login - in a real app, this would make an API call\ncurrentUser={id:1,email:credentials.email};localStorage.setItem('user',JSON.stringify(currentUser));return Promise.resolve(currentUser);};export const logout=()=>{currentUser=null;localStorage.removeItem('user');return Promise.resolve();};// Switch to a different user (for demo purposes)\nexport const switchUser=userId=>{return new Promise((resolve,reject)=>{const user=USERS.find(u=>u.id===userId);if(user){localStorage.setItem('currentUser',JSON.stringify(user));resolve(user);}else{reject(new Error('User not found'));}});};// Get all available users (for demo switching)\nexport const getAvailableUsers=()=>{return USERS;};","map":{"version":3,"names":["USERS","id","name","email","category","avatar","currentUser","getCurrentUser","localStorage","getItem","login","credentials","setItem","JSON","stringify","Promise","resolve","logout","removeItem","switchUser","userId","reject","user","find","u","Error","getAvailableUsers"],"sources":["C:/Users/mishr/OneDrive/Desktop/gig_website_tracker/gig-budget-app/src/services/authService.ts"],"sourcesContent":["import { User } from '../types/User';\r\n\r\n// Mock user data with specific categories\r\nconst USERS: User[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Rahul Kumar',\r\n    email: 'rahul@example.com',\r\n    category: 'Food Delivery',\r\n    avatar: 'https://randomuser.me/api/portraits/men/1.jpg'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Priya Singh',\r\n    email: 'priya@example.com',\r\n    category: 'Cab Driver',\r\n    avatar: 'https://randomuser.me/api/portraits/women/2.jpg'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Amit Patel',\r\n    email: 'amit@example.com',\r\n    category: 'House Cleaner',\r\n    avatar: 'https://randomuser.me/api/portraits/men/3.jpg'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Neha Sharma',\r\n    email: 'neha@example.com',\r\n    category: 'Food Delivery',\r\n    avatar: 'https://randomuser.me/api/portraits/women/4.jpg'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Vikram Desai',\r\n    email: 'vikram@example.com',\r\n    category: 'Cab Driver',\r\n    avatar: 'https://randomuser.me/api/portraits/men/5.jpg'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Lakshmi Reddy',\r\n    email: 'lakshmi@example.com',\r\n    category: 'House Cleaner',\r\n    avatar: 'https://randomuser.me/api/portraits/women/6.jpg'\r\n  }\r\n];\r\n\r\n// Mock authentication service\r\nlet currentUser: any = null;\r\n\r\nexport const getCurrentUser = () => {\r\n  return currentUser || localStorage.getItem('user');\r\n};\r\n\r\nexport const login = (credentials: { email: string; password: string }) => {\r\n  // Mock login - in a real app, this would make an API call\r\n  currentUser = { id: 1, email: credentials.email };\r\n  localStorage.setItem('user', JSON.stringify(currentUser));\r\n  return Promise.resolve(currentUser);\r\n};\r\n\r\nexport const logout = () => {\r\n  currentUser = null;\r\n  localStorage.removeItem('user');\r\n  return Promise.resolve();\r\n};\r\n\r\n// Switch to a different user (for demo purposes)\r\nexport const switchUser = (userId: number): Promise<User> => {\r\n  return new Promise((resolve, reject) => {\r\n    const user = USERS.find(u => u.id === userId);\r\n    \r\n    if (user) {\r\n      localStorage.setItem('currentUser', JSON.stringify(user));\r\n      resolve(user);\r\n    } else {\r\n      reject(new Error('User not found'));\r\n    }\r\n  });\r\n};\r\n\r\n// Get all available users (for demo switching)\r\nexport const getAvailableUsers = (): User[] => {\r\n  return USERS;\r\n}; "],"mappings":"AAEA;AACA,KAAM,CAAAA,KAAa,CAAG,CACpB,CACEC,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,aAAa,CACnBC,KAAK,CAAE,mBAAmB,CAC1BC,QAAQ,CAAE,eAAe,CACzBC,MAAM,CAAE,+CACV,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,aAAa,CACnBC,KAAK,CAAE,mBAAmB,CAC1BC,QAAQ,CAAE,YAAY,CACtBC,MAAM,CAAE,iDACV,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,YAAY,CAClBC,KAAK,CAAE,kBAAkB,CACzBC,QAAQ,CAAE,eAAe,CACzBC,MAAM,CAAE,+CACV,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,aAAa,CACnBC,KAAK,CAAE,kBAAkB,CACzBC,QAAQ,CAAE,eAAe,CACzBC,MAAM,CAAE,iDACV,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,cAAc,CACpBC,KAAK,CAAE,oBAAoB,CAC3BC,QAAQ,CAAE,YAAY,CACtBC,MAAM,CAAE,+CACV,CAAC,CACD,CACEJ,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,eAAe,CACrBC,KAAK,CAAE,qBAAqB,CAC5BC,QAAQ,CAAE,eAAe,CACzBC,MAAM,CAAE,iDACV,CAAC,CACF,CAED;AACA,GAAI,CAAAC,WAAgB,CAAG,IAAI,CAE3B,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,MAAO,CAAAD,WAAW,EAAIE,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CACpD,CAAC,CAED,MAAO,MAAM,CAAAC,KAAK,CAAIC,WAAgD,EAAK,CACzE;AACAL,WAAW,CAAG,CAAEL,EAAE,CAAE,CAAC,CAAEE,KAAK,CAAEQ,WAAW,CAACR,KAAM,CAAC,CACjDK,YAAY,CAACI,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACR,WAAW,CAAC,CAAC,CACzD,MAAO,CAAAS,OAAO,CAACC,OAAO,CAACV,WAAW,CAAC,CACrC,CAAC,CAED,MAAO,MAAM,CAAAW,MAAM,CAAGA,CAAA,GAAM,CAC1BX,WAAW,CAAG,IAAI,CAClBE,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC,CAC/B,MAAO,CAAAH,OAAO,CAACC,OAAO,CAAC,CAAC,CAC1B,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,UAAU,CAAIC,MAAc,EAAoB,CAC3D,MAAO,IAAI,CAAAL,OAAO,CAAC,CAACC,OAAO,CAAEK,MAAM,GAAK,CACtC,KAAM,CAAAC,IAAI,CAAGtB,KAAK,CAACuB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACvB,EAAE,GAAKmB,MAAM,CAAC,CAE7C,GAAIE,IAAI,CAAE,CACRd,YAAY,CAACI,OAAO,CAAC,aAAa,CAAEC,IAAI,CAACC,SAAS,CAACQ,IAAI,CAAC,CAAC,CACzDN,OAAO,CAACM,IAAI,CAAC,CACf,CAAC,IAAM,CACLD,MAAM,CAAC,GAAI,CAAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CACrC,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAc,CAC7C,MAAO,CAAA1B,KAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}