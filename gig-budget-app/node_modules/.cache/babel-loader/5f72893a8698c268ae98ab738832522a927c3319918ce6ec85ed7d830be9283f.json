{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Box,Paper,Typography,TextField,IconButton,Avatar,List,ListItem,ListItemText,ListItemAvatar,Fab,Collapse,Card}from'@mui/material';import{Send as SendIcon,SmartToy as RobotIcon,Person as PersonIcon}from'@mui/icons-material';import{styled}from'@mui/material/styles';import trainingData from'../../data/financeBotData.json';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const StyledFab=styled(Fab)(_ref=>{let{theme}=_ref;return{position:'fixed',bottom:20,right:20,backgroundColor:theme.palette.primary.main,'&:hover':{backgroundColor:theme.palette.primary.dark}};});const ChatWindow=styled(Card)(_ref2=>{let{theme}=_ref2;return{position:'fixed',bottom:90,right:20,width:300,maxHeight:400,display:'flex',flexDirection:'column',zIndex:1000,borderRadius:'12px'};});const MessageList=styled(List)({flexGrow:1,overflow:'auto',maxHeight:300,padding:'10px'});const RobotAvatar=styled(Avatar)(_ref3=>{let{theme}=_ref3;return{backgroundColor:theme.palette.primary.main,width:40,height:40};});const SimpleFinanceBot=()=>{const[isOpen,setIsOpen]=useState(false);const[messages,setMessages]=useState([{text:\"Hello! I'm your finance assistant. How can I help you with your financial planning today?\",sender:'bot'}]);const[input,setInput]=useState('');const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);const findBestMatch=userInput=>{const normalizedInput=userInput.toLowerCase().trim();// Check scenario-based responses first\nfor(const scenario of trainingData.scenarioBased){if(normalizedInput.includes(scenario.input.toLowerCase())){return scenario.output;}}// Check intent-based responses\nfor(const[intent,data]of Object.entries(trainingData.intentBased)){if(intent==='default')continue;const intentData=data;// Special handling for goalPlanning intent with wildcards\nif(intent==='goalPlanning'){const hasMatchingPattern=intentData.patterns.some(pattern=>{// Convert wildcard pattern to regex\nconst regexPattern=pattern.replace(/\\*/g,'.*');const regex=new RegExp(`^${regexPattern}$`,'i');return regex.test(normalizedInput);});if(hasMatchingPattern){return intentData.responses[Math.floor(Math.random()*intentData.responses.length)];}}else if(intentData.patterns.some(pattern=>normalizedInput.includes(pattern))){return intentData.responses[Math.floor(Math.random()*intentData.responses.length)];}}// Return default response if no match found\nreturn trainingData.intentBased.default.responses[Math.floor(Math.random()*trainingData.intentBased.default.responses.length)];};const handleSend=()=>{if(input.trim()){const userMessage={text:input,sender:'user'};setMessages(prev=>[...prev,userMessage]);const botResponse=findBestMatch(input);const botMessage={text:botResponse,sender:'bot'};setTimeout(()=>{setMessages(prev=>[...prev,botMessage]);},500);setInput('');}};const handleKeyPress=e=>{if(e.key==='Enter'){handleSend();}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(StyledFab,{color:\"primary\",onClick:()=>setIsOpen(!isOpen),children:/*#__PURE__*/_jsx(RobotIcon,{})}),/*#__PURE__*/_jsx(Collapse,{in:isOpen,children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{width:400,maxHeight:600,display:'flex',flexDirection:'column',borderRadius:2,overflow:'hidden'},children:[/*#__PURE__*/_jsxs(Box,{sx:{p:2,bgcolor:'primary.main',color:'white',display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(RobotIcon,{}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Finance Assistant\"})]}),/*#__PURE__*/_jsxs(List,{sx:{flexGrow:1,overflow:'auto',p:2,bgcolor:'background.default',minHeight:400},children:[messages.map((message,index)=>/*#__PURE__*/_jsxs(ListItem,{sx:{flexDirection:message.sender==='user'?'row-reverse':'row'},children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:message.sender==='bot'?/*#__PURE__*/_jsx(RobotAvatar,{children:/*#__PURE__*/_jsx(RobotIcon,{})}):/*#__PURE__*/_jsx(Avatar,{children:/*#__PURE__*/_jsx(PersonIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsx(Paper,{elevation:1,sx:{p:1,bgcolor:message.sender==='bot'?'primary.light':'grey.100',maxWidth:'80%',display:'inline-block',borderRadius:'12px'},children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:message.text})}),sx:{textAlign:message.sender==='user'?'right':'left'}})]},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(Box,{sx:{p:1,borderTop:'1px solid rgba(0,0,0,0.12)'},children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,size:\"small\",placeholder:\"Ask a finance question...\",value:input,onChange:e=>setInput(e.target.value),onKeyPress:handleKeyPress,InputProps:{endAdornment:/*#__PURE__*/_jsx(IconButton,{onClick:handleSend,children:/*#__PURE__*/_jsx(SendIcon,{})}),sx:{borderRadius:'20px'}}})})]})})]});};export default SimpleFinanceBot;","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Paper","Typography","TextField","IconButton","Avatar","List","ListItem","ListItemText","ListItemAvatar","Fab","Collapse","Card","Send","SendIcon","SmartToy","RobotIcon","Person","PersonIcon","styled","trainingData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StyledFab","_ref","theme","position","bottom","right","backgroundColor","palette","primary","main","dark","ChatWindow","_ref2","width","maxHeight","display","flexDirection","zIndex","borderRadius","MessageList","flexGrow","overflow","padding","RobotAvatar","_ref3","height","SimpleFinanceBot","isOpen","setIsOpen","messages","setMessages","text","sender","input","setInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","findBestMatch","userInput","normalizedInput","toLowerCase","trim","scenario","scenarioBased","includes","output","intent","data","Object","entries","intentBased","intentData","hasMatchingPattern","patterns","some","pattern","regexPattern","replace","regex","RegExp","test","responses","Math","floor","random","length","default","handleSend","userMessage","prev","botResponse","botMessage","setTimeout","handleKeyPress","e","key","children","color","onClick","in","elevation","sx","p","bgcolor","alignItems","gap","variant","minHeight","map","message","index","maxWidth","textAlign","ref","borderTop","fullWidth","size","placeholder","value","onChange","target","onKeyPress","InputProps","endAdornment"],"sources":["C:/Users/mishr/OneDrive/Desktop/gig_website_tracker/gig-budget-app/src/components/ai/SimpleFinanceBot.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  IconButton,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Fab,\r\n  Collapse,\r\n  Card,\r\n  CardContent,\r\n} from '@mui/material';\r\nimport {\r\n  Send as SendIcon,\r\n  SmartToy as RobotIcon,\r\n  Person as PersonIcon,\r\n  Close as CloseIcon,\r\n} from '@mui/icons-material';\r\nimport { styled } from '@mui/material/styles';\r\nimport trainingData from '../../data/financeBotData.json';\r\n\r\nconst StyledFab = styled(Fab)(({ theme }) => ({\r\n  position: 'fixed',\r\n  bottom: 20,\r\n  right: 20,\r\n  backgroundColor: theme.palette.primary.main,\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\nconst ChatWindow = styled(Card)(({ theme }) => ({\r\n  position: 'fixed',\r\n  bottom: 90,\r\n  right: 20,\r\n  width: 300,\r\n  maxHeight: 400,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  zIndex: 1000,\r\n  borderRadius: '12px',\r\n}));\r\n\r\nconst MessageList = styled(List)({\r\n  flexGrow: 1,\r\n  overflow: 'auto',\r\n  maxHeight: 300,\r\n  padding: '10px',\r\n});\r\n\r\nconst RobotAvatar = styled(Avatar)(({ theme }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  width: 40,\r\n  height: 40,\r\n}));\r\n\r\ninterface Message {\r\n  text: string;\r\n  sender: 'user' | 'bot';\r\n}\r\n\r\ninterface IntentResponse {\r\n  patterns: string[];\r\n  responses: string[];\r\n}\r\n\r\ninterface DefaultResponse {\r\n  responses: string[];\r\n}\r\n\r\ninterface ScenarioResponse {\r\n  input: string;\r\n  output: string;\r\n}\r\n\r\ninterface TrainingData {\r\n  intentBased: {\r\n    [key: string]: IntentResponse | DefaultResponse;\r\n    default: DefaultResponse;\r\n  };\r\n  scenarioBased: ScenarioResponse[];\r\n}\r\n\r\nconst SimpleFinanceBot: React.FC = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      text: \"Hello! I'm your finance assistant. How can I help you with your financial planning today?\",\r\n      sender: 'bot'\r\n    }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const findBestMatch = (userInput: string): string => {\r\n    const normalizedInput = userInput.toLowerCase().trim();\r\n    \r\n    // Check scenario-based responses first\r\n    for (const scenario of trainingData.scenarioBased) {\r\n      if (normalizedInput.includes(scenario.input.toLowerCase())) {\r\n        return scenario.output;\r\n      }\r\n    }\r\n\r\n    // Check intent-based responses\r\n    for (const [intent, data] of Object.entries(trainingData.intentBased)) {\r\n      if (intent === 'default') continue;\r\n      const intentData = data as IntentResponse;\r\n      \r\n      // Special handling for goalPlanning intent with wildcards\r\n      if (intent === 'goalPlanning') {\r\n        const hasMatchingPattern = intentData.patterns.some(pattern => {\r\n          // Convert wildcard pattern to regex\r\n          const regexPattern = pattern.replace(/\\*/g, '.*');\r\n          const regex = new RegExp(`^${regexPattern}$`, 'i');\r\n          return regex.test(normalizedInput);\r\n        });\r\n        \r\n        if (hasMatchingPattern) {\r\n          return intentData.responses[Math.floor(Math.random() * intentData.responses.length)];\r\n        }\r\n      } else if (intentData.patterns.some(pattern => normalizedInput.includes(pattern))) {\r\n        return intentData.responses[Math.floor(Math.random() * intentData.responses.length)];\r\n      }\r\n    }\r\n\r\n    // Return default response if no match found\r\n    return trainingData.intentBased.default.responses[\r\n      Math.floor(Math.random() * trainingData.intentBased.default.responses.length)\r\n    ];\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (input.trim()) {\r\n      const userMessage: Message = { text: input, sender: 'user' };\r\n      setMessages(prev => [...prev, userMessage]);\r\n      \r\n      const botResponse = findBestMatch(input);\r\n      const botMessage: Message = { text: botResponse, sender: 'bot' };\r\n      \r\n      setTimeout(() => {\r\n        setMessages(prev => [...prev, botMessage]);\r\n      }, 500);\r\n      \r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledFab color=\"primary\" onClick={() => setIsOpen(!isOpen)}>\r\n        <RobotIcon />\r\n      </StyledFab>\r\n\r\n      <Collapse in={isOpen}>\r\n        <Paper \r\n          elevation={3} \r\n          sx={{ \r\n            width: 400, \r\n            maxHeight: 600, \r\n            display: 'flex', \r\n            flexDirection: 'column',\r\n            borderRadius: 2,\r\n            overflow: 'hidden'\r\n          }}\r\n        >\r\n          <Box sx={{ \r\n            p: 2, \r\n            bgcolor: 'primary.main', \r\n            color: 'white',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 1\r\n          }}>\r\n            <RobotIcon />\r\n            <Typography variant=\"h6\">Finance Assistant</Typography>\r\n          </Box>\r\n\r\n          <List sx={{ \r\n            flexGrow: 1, \r\n            overflow: 'auto', \r\n            p: 2,\r\n            bgcolor: 'background.default',\r\n            minHeight: 400\r\n          }}>\r\n            {messages.map((message, index) => (\r\n              <ListItem\r\n                key={index}\r\n                sx={{\r\n                  flexDirection: message.sender === 'user' ? 'row-reverse' : 'row',\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  {message.sender === 'bot' ? (\r\n                    <RobotAvatar>\r\n                      <RobotIcon />\r\n                    </RobotAvatar>\r\n                  ) : (\r\n                    <Avatar>\r\n                      <PersonIcon />\r\n                    </Avatar>\r\n                  )}\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={\r\n                    <Paper\r\n                      elevation={1}\r\n                      sx={{\r\n                        p: 1,\r\n                        bgcolor: message.sender === 'bot' ? 'primary.light' : 'grey.100',\r\n                        maxWidth: '80%',\r\n                        display: 'inline-block',\r\n                        borderRadius: '12px',\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\">{message.text}</Typography>\r\n                    </Paper>\r\n                  }\r\n                  sx={{\r\n                    textAlign: message.sender === 'user' ? 'right' : 'left',\r\n                  }}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </List>\r\n\r\n          <Box sx={{ p: 1, borderTop: '1px solid rgba(0,0,0,0.12)' }}>\r\n            <TextField\r\n              fullWidth\r\n              size=\"small\"\r\n              placeholder=\"Ask a finance question...\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <IconButton onClick={handleSend}>\r\n                    <SendIcon />\r\n                  </IconButton>\r\n                ),\r\n                sx: { borderRadius: '20px' }\r\n              }}\r\n            />\r\n          </Box>\r\n        </Paper>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SimpleFinanceBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}