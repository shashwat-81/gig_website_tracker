{"ast":null,"code":"import React from'react';import{Button,Box,Typography}from'@mui/material';import{Download as DownloadIcon}from'@mui/icons-material';import*as XLSX from'xlsx';import{useExpenses}from'../../context/ExpenseContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExportReport=_ref=>{let{onExportComplete}=_ref;const{expenses}=useExpenses();const formatDate=date=>{return new Date(date).toLocaleDateString('en-IN',{day:'2-digit',month:'2-digit',year:'numeric'});};const exportToExcel=()=>{// Prepare the data for Excel\nconst excelData=expenses.map(expense=>({'Date':formatDate(expense.date),'Category':expense.category,'Description':expense.description,'Amount (₹)':expense.amount.toFixed(2),'Payment Method':expense.paymentMethod,'Status':expense.status,'Notes':expense.notes||''}));// Create a new workbook\nconst wb=XLSX.utils.book_new();const ws=XLSX.utils.json_to_sheet(excelData);// Set column widths\nconst colWidths=[{wch:12},// Date\n{wch:15},// Category\n{wch:30},// Description\n{wch:12},// Amount\n{wch:15},// Payment Method\n{wch:12},// Status\n{wch:30}// Notes\n];ws['!cols']=colWidths;// Add the worksheet to the workbook\nXLSX.utils.book_append_sheet(wb,ws,'Expense Report');// Generate the Excel file\nconst fileName=`Expense_Report_${new Date().toISOString().split('T')[0]}.xlsx`;XLSX.writeFile(wb,fileName);if(onExportComplete){onExportComplete();}};return/*#__PURE__*/_jsxs(Box,{sx:{p:2,textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Export Expense Report\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:\"Generate an Excel report of your expenses for accounting purposes\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(DownloadIcon,{}),onClick:exportToExcel,sx:{mt:2},children:\"Export to Excel\"})]});};export default ExportReport;","map":{"version":3,"names":["React","Button","Box","Typography","Download","DownloadIcon","XLSX","useExpenses","jsx","_jsx","jsxs","_jsxs","ExportReport","_ref","onExportComplete","expenses","formatDate","date","Date","toLocaleDateString","day","month","year","exportToExcel","excelData","map","expense","category","description","amount","toFixed","paymentMethod","status","notes","wb","utils","book_new","ws","json_to_sheet","colWidths","wch","book_append_sheet","fileName","toISOString","split","writeFile","sx","p","textAlign","children","variant","gutterBottom","color","paragraph","startIcon","onClick","mt"],"sources":["C:/Users/mishr/OneDrive/Desktop/gig_website_tracker/gig-budget-app/src/components/reports/ExportReport.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Button, Box, Typography } from '@mui/material';\r\nimport { Download as DownloadIcon } from '@mui/icons-material';\r\nimport * as XLSX from 'xlsx';\r\nimport { useExpenses, Expense } from '../../context/ExpenseContext';\r\n\r\ninterface ExportReportProps {\r\n  onExportComplete?: () => void;\r\n}\r\n\r\nconst ExportReport: React.FC<ExportReportProps> = ({ onExportComplete }) => {\r\n  const { expenses } = useExpenses();\r\n\r\n  const formatDate = (date: Date) => {\r\n    return new Date(date).toLocaleDateString('en-IN', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    // Prepare the data for Excel\r\n    const excelData = expenses.map((expense: Expense) => ({\r\n      'Date': formatDate(expense.date),\r\n      'Category': expense.category,\r\n      'Description': expense.description,\r\n      'Amount (₹)': expense.amount.toFixed(2),\r\n      'Payment Method': expense.paymentMethod,\r\n      'Status': expense.status,\r\n      'Notes': expense.notes || ''\r\n    }));\r\n\r\n    // Create a new workbook\r\n    const wb = XLSX.utils.book_new();\r\n    const ws = XLSX.utils.json_to_sheet(excelData);\r\n\r\n    // Set column widths\r\n    const colWidths = [\r\n      { wch: 12 }, // Date\r\n      { wch: 15 }, // Category\r\n      { wch: 30 }, // Description\r\n      { wch: 12 }, // Amount\r\n      { wch: 15 }, // Payment Method\r\n      { wch: 12 }, // Status\r\n      { wch: 30 }  // Notes\r\n    ];\r\n    ws['!cols'] = colWidths;\r\n\r\n    // Add the worksheet to the workbook\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Expense Report');\r\n\r\n    // Generate the Excel file\r\n    const fileName = `Expense_Report_${new Date().toISOString().split('T')[0]}.xlsx`;\r\n    XLSX.writeFile(wb, fileName);\r\n\r\n    if (onExportComplete) {\r\n      onExportComplete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2, textAlign: 'center' }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Export Expense Report\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n        Generate an Excel report of your expenses for accounting purposes\r\n      </Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<DownloadIcon />}\r\n        onClick={exportToExcel}\r\n        sx={{ mt: 2 }}\r\n      >\r\n        Export to Excel\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExportReport; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}