{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Card,CardContent,Typography,Stack,Button,LinearProgress}from'@mui/material';import{XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer,LineChart,Line}from'recharts';import{TrendingUp,ShowChart,CalendarMonth}from'@mui/icons-material';// Function to generate random income data\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const generateRandomIncomeData=()=>{const months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep'];const baseIncome=25000;// Base income amount\nconst volatility=0.2;// 20% volatility\nlet currentActual=baseIncome;let currentPredicted=baseIncome;return months.map((month,index)=>{// Random walk for actual income (only for past months)\nconst actualChange=baseIncome*volatility*(Math.random()-0.5);currentActual=Math.max(15000,currentActual+actualChange);// Random walk for predicted income with some correlation to actual\nconst predictedChange=baseIncome*volatility*(Math.random()-0.5);currentPredicted=Math.max(15000,currentPredicted+predictedChange);// Confidence decreases as we look further into the future\nconst confidence=Math.max(70,90-index*2);return{name:month,actual:index<6?Math.round(currentActual):null,// Only show actual for past 6 months\npredicted:Math.round(currentPredicted),confidence};});};// Simulated seasonal insights for gig work in India\nconst seasonalInsights=[{season:'Festival Season (Oct-Nov)',insight:'Income typically increases by 20-30% during festival season',recommendation:'Save extra earnings for upcoming lean months'},{season:'Summer (Apr-Jun)',insight:'Delivery and transport gigs see higher demand due to heat',recommendation:'Consider diversifying income sources during this period'},{season:'Monsoon (Jul-Sep)',insight:'Outdoor gig work can decline by 15-25%',recommendation:'Build an emergency fund before monsoon season starts'}];const IncomeForecast=()=>{const[viewMode,setViewMode]=useState('chart');const[forecastData,setForecastData]=useState(generateRandomIncomeData());// Generate new random data when component mounts\nuseEffect(()=>{setForecastData(generateRandomIncomeData());},[]);// Calculate average monthly income based on actual data\nconst actualIncomes=forecastData.filter(month=>month.actual!==null).map(month=>month.actual);const averageMonthlyIncome=actualIncomes.reduce((sum,income)=>sum+(income!==null&&income!==void 0?income:0),0)/actualIncomes.length;// Identify upcoming months with predicted income below average\nconst belowAverageMonths=forecastData.filter(month=>month.actual===null&&(month.predicted||0)<averageMonthlyIncome).map(month=>month.name);// Estimate buffer fund needed (3 months of average expenses)\nconst recommendedBuffer=Math.round(averageMonthlyIncome*3);return/*#__PURE__*/_jsx(Card,{sx:{height:'100%'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",fontWeight:\"bold\",children:\"Income Forecast & Predictions\"}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:1,children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:viewMode==='chart'?'contained':'outlined',onClick:()=>setViewMode('chart'),startIcon:/*#__PURE__*/_jsx(ShowChart,{}),children:\"Chart\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:viewMode==='insights'?'contained':'outlined',onClick:()=>setViewMode('insights'),startIcon:/*#__PURE__*/_jsx(TrendingUp,{}),children:\"Insights\"})]})]}),viewMode==='chart'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{sx:{height:300,mb:3},children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{data:forecastData,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{domain:[15000,35000]}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[`â‚¹${value.toLocaleString()}`,'Income']}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"actual\",stroke:\"#8884d8\",name:\"Actual Income\",strokeWidth:2,activeDot:{r:8}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"predicted\",stroke:\"#82ca9d\",name:\"Predicted Income\",strokeWidth:2,strokeDasharray:\"5 5\"})]})})}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",sx:{mb:1},children:\"Prediction Confidence Levels\"}),/*#__PURE__*/_jsx(Stack,{spacing:1,children:forecastData.filter(item=>item.actual===null).map(item=>{var _item$predicted;return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:0.5},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[item.name,\": \\u20B9\",(_item$predicted=item.predicted)===null||_item$predicted===void 0?void 0:_item$predicted.toLocaleString()]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[item.confidence,\"% confidence\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:item.confidence,sx:{height:6,borderRadius:3,backgroundColor:'grey.200','& .MuiLinearProgress-bar':{backgroundColor:item.confidence>85?'success.main':item.confidence>70?'warning.main':'error.main'}}})]},item.name);})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",fontWeight:\"bold\",gutterBottom:true,children:\"Seasonal Income Patterns\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2},children:\"Based on historical data and region-specific trends in India's gig economy\"}),/*#__PURE__*/_jsx(Stack,{spacing:2,children:seasonalInsights.map((item,index)=>/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{p:2},children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:1,alignItems:\"center\",sx:{mb:1},children:[/*#__PURE__*/_jsx(CalendarMonth,{color:\"primary\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",fontWeight:\"bold\",children:item.season})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",gutterBottom:true,children:item.insight}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"primary\",fontWeight:\"medium\",children:[\"Recommendation: \",item.recommendation]})]},index))})]}),/*#__PURE__*/_jsxs(Box,{sx:{bgcolor:'success.light',p:2,borderRadius:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",fontWeight:\"bold\",color:\"success.dark\",gutterBottom:true,children:\"Income Opportunity Alert:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"success.dark\",children:\"Based on your skills and location (Bangalore), demand for delivery services is projected to increase by 35% next month. Consider increasing availability during evenings (6-9 PM) to potentially earn \\u20B98,000-12,000 extra.\"})]})]})]})});};export default IncomeForecast;","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","Stack","Button","LinearProgress","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","LineChart","Line","TrendingUp","ShowChart","CalendarMonth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","generateRandomIncomeData","months","baseIncome","volatility","currentActual","currentPredicted","map","month","index","actualChange","Math","random","max","predictedChange","confidence","name","actual","round","predicted","seasonalInsights","season","insight","recommendation","IncomeForecast","viewMode","setViewMode","forecastData","setForecastData","actualIncomes","filter","averageMonthlyIncome","reduce","sum","income","length","belowAverageMonths","recommendedBuffer","sx","height","children","display","justifyContent","alignItems","mb","variant","fontWeight","direction","spacing","size","onClick","startIcon","width","data","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","formatter","value","toLocaleString","type","stroke","strokeWidth","activeDot","r","color","item","_item$predicted","borderRadius","backgroundColor","gutterBottom","p","bgcolor"],"sources":["C:/Users/mishr/OneDrive/Desktop/gig_website_tracker/gig-budget-app/src/components/dashboard/IncomeForecast.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Card, CardContent, Typography, Stack, Button, LinearProgress } from '@mui/material';\r\nimport { XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line } from 'recharts';\r\nimport { TrendingUp, ShowChart, CalendarMonth } from '@mui/icons-material';\r\n\r\n// Function to generate random income data\r\nconst generateRandomIncomeData = () => {\r\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'];\r\n  const baseIncome = 25000; // Base income amount\r\n  const volatility = 0.2; // 20% volatility\r\n\r\n  let currentActual = baseIncome;\r\n  let currentPredicted = baseIncome;\r\n\r\n  return months.map((month, index) => {\r\n    // Random walk for actual income (only for past months)\r\n    const actualChange = baseIncome * volatility * (Math.random() - 0.5);\r\n    currentActual = Math.max(15000, currentActual + actualChange);\r\n\r\n    // Random walk for predicted income with some correlation to actual\r\n    const predictedChange = baseIncome * volatility * (Math.random() - 0.5);\r\n    currentPredicted = Math.max(15000, currentPredicted + predictedChange);\r\n\r\n    // Confidence decreases as we look further into the future\r\n    const confidence = Math.max(70, 90 - index * 2);\r\n\r\n    return {\r\n      name: month,\r\n      actual: index < 6 ? Math.round(currentActual) : null, // Only show actual for past 6 months\r\n      predicted: Math.round(currentPredicted),\r\n      confidence\r\n    };\r\n  });\r\n};\r\n\r\n// Simulated seasonal insights for gig work in India\r\nconst seasonalInsights = [\r\n  { \r\n    season: 'Festival Season (Oct-Nov)', \r\n    insight: 'Income typically increases by 20-30% during festival season', \r\n    recommendation: 'Save extra earnings for upcoming lean months'\r\n  },\r\n  { \r\n    season: 'Summer (Apr-Jun)', \r\n    insight: 'Delivery and transport gigs see higher demand due to heat', \r\n    recommendation: 'Consider diversifying income sources during this period'\r\n  },\r\n  { \r\n    season: 'Monsoon (Jul-Sep)', \r\n    insight: 'Outdoor gig work can decline by 15-25%', \r\n    recommendation: 'Build an emergency fund before monsoon season starts'\r\n  }\r\n];\r\n\r\nconst IncomeForecast: React.FC = () => {\r\n  const [viewMode, setViewMode] = useState<'chart' | 'insights'>('chart');\r\n  const [forecastData, setForecastData] = useState(generateRandomIncomeData());\r\n  \r\n  // Generate new random data when component mounts\r\n  useEffect(() => {\r\n    setForecastData(generateRandomIncomeData());\r\n  }, []);\r\n  \r\n  // Calculate average monthly income based on actual data\r\n  const actualIncomes = forecastData.filter(month => month.actual !== null).map(month => month.actual);\r\n  const averageMonthlyIncome = actualIncomes.reduce((sum: number, income) => sum + (income ?? 0), 0) / actualIncomes.length;\r\n  \r\n  // Identify upcoming months with predicted income below average\r\n  const belowAverageMonths = forecastData\r\n    .filter(month => month.actual === null && (month.predicted || 0) < averageMonthlyIncome)\r\n    .map(month => month.name);\r\n  \r\n  // Estimate buffer fund needed (3 months of average expenses)\r\n  const recommendedBuffer = Math.round(averageMonthlyIncome * 3);\r\n\r\n  return (\r\n    <Card sx={{ height: '100%' }}>\r\n      <CardContent>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n          <Typography variant=\"h6\" fontWeight=\"bold\">\r\n            Income Forecast & Predictions\r\n          </Typography>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <Button \r\n              size=\"small\" \r\n              variant={viewMode === 'chart' ? 'contained' : 'outlined'} \r\n              onClick={() => setViewMode('chart')}\r\n              startIcon={<ShowChart />}\r\n            >\r\n              Chart\r\n            </Button>\r\n            <Button \r\n              size=\"small\" \r\n              variant={viewMode === 'insights' ? 'contained' : 'outlined'} \r\n              onClick={() => setViewMode('insights')}\r\n              startIcon={<TrendingUp />}\r\n            >\r\n              Insights\r\n            </Button>\r\n          </Stack>\r\n        </Box>\r\n        \r\n        {viewMode === 'chart' ? (\r\n          <>\r\n            <Box sx={{ height: 300, mb: 3 }}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <LineChart\r\n                  data={forecastData}\r\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis domain={[15000, 35000]} />\r\n                  <Tooltip formatter={(value: number) => [`â‚¹${value.toLocaleString()}`, 'Income']} />\r\n                  <Legend />\r\n                  <Line \r\n                    type=\"monotone\" \r\n                    dataKey=\"actual\" \r\n                    stroke=\"#8884d8\" \r\n                    name=\"Actual Income\" \r\n                    strokeWidth={2}\r\n                    activeDot={{ r: 8 }} \r\n                  />\r\n                  <Line \r\n                    type=\"monotone\" \r\n                    dataKey=\"predicted\" \r\n                    stroke=\"#82ca9d\" \r\n                    name=\"Predicted Income\" \r\n                    strokeWidth={2}\r\n                    strokeDasharray=\"5 5\" \r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Box>\r\n            \r\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n              Prediction Confidence Levels\r\n            </Typography>\r\n            <Stack spacing={1}>\r\n              {forecastData.filter(item => item.actual === null).map((item) => (\r\n                <Box key={item.name}>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\r\n                    <Typography variant=\"body2\">{item.name}: â‚¹{item.predicted?.toLocaleString()}</Typography>\r\n                    <Typography variant=\"body2\">{item.confidence}% confidence</Typography>\r\n                  </Box>\r\n                  <LinearProgress \r\n                    variant=\"determinate\" \r\n                    value={item.confidence} \r\n                    sx={{ \r\n                      height: 6, \r\n                      borderRadius: 3,\r\n                      backgroundColor: 'grey.200',\r\n                      '& .MuiLinearProgress-bar': {\r\n                        backgroundColor: \r\n                          item.confidence > 85 ? 'success.main' :\r\n                          item.confidence > 70 ? 'warning.main' : \r\n                          'error.main'\r\n                      }\r\n                    }} \r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Stack>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Box sx={{ mb: 3 }}>\r\n              <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\r\n                Seasonal Income Patterns\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                Based on historical data and region-specific trends in India's gig economy\r\n              </Typography>\r\n              \r\n              <Stack spacing={2}>\r\n                {seasonalInsights.map((item, index) => (\r\n                  <Card key={index} variant=\"outlined\" sx={{ p: 2 }}>\r\n                    <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mb: 1 }}>\r\n                      <CalendarMonth color=\"primary\" />\r\n                      <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                        {item.season}\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      {item.insight}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"primary\" fontWeight=\"medium\">\r\n                      Recommendation: {item.recommendation}\r\n                    </Typography>\r\n                  </Card>\r\n                ))}\r\n              </Stack>\r\n            </Box>\r\n            \r\n            <Box sx={{ bgcolor: 'success.light', p: 2, borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle2\" fontWeight=\"bold\" color=\"success.dark\" gutterBottom>\r\n                Income Opportunity Alert:\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"success.dark\">\r\n                Based on your skills and location (Bangalore), demand for delivery services is projected to increase by 35% next month. Consider increasing availability during evenings (6-9 PM) to potentially earn â‚¹8,000-12,000 extra.\r\n              </Typography>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default IncomeForecast; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}