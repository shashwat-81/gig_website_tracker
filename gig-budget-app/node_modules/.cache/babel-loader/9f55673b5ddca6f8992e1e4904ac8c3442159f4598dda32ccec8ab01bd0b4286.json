{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useSelector}from'react-redux';import{Box,Typography,Card,CardContent,Grid,Button,CircularProgress,Tabs,Tab,List,ListItem,ListItemIcon,ListItemText,Chip,Alert,AlertTitle}from'@mui/material';import{TrendingDown,Savings,Calculate,CalendarMonth,CheckCircle,Warning,Info,Category}from'@mui/icons-material';import*as aiPredictionService from'../../services/aiPredictionService';import{getCurrentUser}from'../../services/authService';import{Line,Pie}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,BarElement,ArcElement,Title,Tooltip,Legend}from'chart.js';// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,BarElement,ArcElement,Title,Tooltip,Legend);// Tab panel interface\n// Custom TabPanel component\nfunction TabPanel(props){const{children,value,index,...other}=props;return/*#__PURE__*/_jsx(\"div\",{role:\"tabpanel\",hidden:value!==index,id:`insights-tabpanel-${index}`,\"aria-labelledby\":`insights-tab-${index}`,...other,children:value===index&&/*#__PURE__*/_jsx(Box,{sx:{pt:3},children:children})});}// Currency formatter\nconst formatCurrency=amount=>{return new Intl.NumberFormat('en-IN',{style:'currency',currency:'INR',maximumFractionDigits:0}).format(amount);};// Component to handle recommendation severity\nconst RecommendationAlert=_ref=>{let{type,title,description}=_ref;let severity='info';let icon=/*#__PURE__*/_jsx(Info,{});switch(type){case'urgent':severity='error';icon=/*#__PURE__*/_jsx(Warning,{});break;case'important':severity='warning';icon=/*#__PURE__*/_jsx(Warning,{});break;case'consideration':severity='info';icon=/*#__PURE__*/_jsx(Info,{});break;case'success':severity='success';icon=/*#__PURE__*/_jsx(CheckCircle,{});break;default:severity='info';}return/*#__PURE__*/_jsxs(Alert,{severity:severity,icon:icon,sx:{mb:2},children:[/*#__PURE__*/_jsx(AlertTitle,{children:title}),description]});};const AIInsightsDashboard=()=>{// State\nconst[activeTab,setActiveTab]=useState(0);const[loading,setLoading]=useState(true);const[error,setError]=useState('');// AI insights state\nconst[incomeForecast,setIncomeForecast]=useState(null);const[expenseAnalysis,setExpenseAnalysis]=useState(null);const[savingsPlan,setSavingsPlan]=useState(null);const[taxSuggestions,setTaxSuggestions]=useState(null);const[lowIncomePlan,setLowIncomePlan]=useState(null);// Get the current user for category-specific insights\nconst currentUser=getCurrentUser();// Get data from Redux store\nconst incomeData=useSelector(state=>{var _state$income;return((_state$income=state.income)===null||_state$income===void 0?void 0:_state$income.incomeList)||[];});const expenseData=useSelector(state=>{var _state$expense;return((_state$expense=state.expense)===null||_state$expense===void 0?void 0:_state$expense.expenses)||[];});// Fetch AI insights on component mount\nuseEffect(()=>{if(currentUser){fetchAllInsights();}else{setLoading(false);setError('Please log in to view AI insights.');}},[currentUser]);// Handle tab change\nconst handleTabChange=(event,newValue)=>{setActiveTab(newValue);};// Fetch all AI insights\nconst fetchAllInsights=async()=>{if(!currentUser)return;setLoading(true);setError('');try{// Fetch all insights in parallel using the user's category\nconst[incomeForecastRes,expenseAnalysisRes,savingsPlanRes,taxSuggestionsRes,lowIncomePlanRes]=await Promise.all([aiPredictionService.getIncomeForecast(currentUser),aiPredictionService.getExpenseAnalysis(currentUser),aiPredictionService.getSavingsPlan(currentUser),aiPredictionService.getTaxSuggestions(currentUser),aiPredictionService.getLowIncomePreparation(currentUser)]);// Update state with responses\nsetIncomeForecast(incomeForecastRes.forecast);setExpenseAnalysis(expenseAnalysisRes.analysis);setSavingsPlan(savingsPlanRes.plan);setTaxSuggestions(taxSuggestionsRes);setLowIncomePlan(lowIncomePlanRes);}catch(err){console.error('Error fetching AI insights:',err);setError('Failed to fetch AI insights. Please try again later.');}finally{setLoading(false);}};// Income Forecast Chart Data\nconst getIncomeChartData=()=>{if(!incomeForecast||!incomeForecast.monthly)return{labels:[],datasets:[{label:'Predicted Income',data:[],fill:false,backgroundColor:'rgba(46, 125, 50, 0.2)',borderColor:'rgba(46, 125, 50, 1)',tension:0.1}]};const months=incomeForecast.monthly.map(m=>m.month);const amounts=incomeForecast.monthly.map(m=>m.predicted_amount);return{labels:months,datasets:[{label:'Predicted Income',data:amounts,fill:false,backgroundColor:'rgba(46, 125, 50, 0.2)',borderColor:'rgba(46, 125, 50, 1)',tension:0.1}]};};// Expense By Category Chart Data\nconst getExpenseChartData=()=>{if(!expenseAnalysis||!expenseAnalysis.by_category)return{labels:[],datasets:[{data:[],backgroundColor:[],borderWidth:1}]};const categories=Object.keys(expenseAnalysis.by_category);const amounts=categories.map(cat=>expenseAnalysis.by_category[cat].total);// Generate colors for each category\nconst backgroundColors=categories.map((_,i)=>{const hue=i*30%360;return`hsla(${hue}, 60%, 60%, 0.8)`;});return{labels:categories,datasets:[{data:amounts,backgroundColor:backgroundColors,borderWidth:1}]};};// Render insights dashboard\nreturn/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3,display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:1,fontWeight:'bold'},children:\"AI Financial Insights\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",children:\"Personalized financial analysis powered by machine learning\"})]}),currentUser&&/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(Category,{}),label:`Category: ${currentUser.category}`,color:\"primary\",variant:\"outlined\"})]}),error?/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},children:error}):loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',my:5},children:/*#__PURE__*/_jsx(CircularProgress,{})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:handleTabChange,\"aria-label\":\"insight tabs\",children:[/*#__PURE__*/_jsx(Tab,{label:\"Income Forecast\"}),/*#__PURE__*/_jsx(Tab,{label:\"Expense Analysis\"}),/*#__PURE__*/_jsx(Tab,{label:\"Savings Plan\"}),/*#__PURE__*/_jsx(Tab,{label:\"Tax Optimization\"}),/*#__PURE__*/_jsx(Tab,{label:\"Seasonal Planning\"})]})}),/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:0,children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[\"Monthly Income Forecast for \",currentUser===null||currentUser===void 0?void 0:currentUser.category]}),(incomeForecast===null||incomeForecast===void 0?void 0:incomeForecast.monthly)&&/*#__PURE__*/_jsx(Box,{sx:{height:300},children:/*#__PURE__*/_jsx(Line,{data:getIncomeChartData(),options:{maintainAspectRatio:false}})})]})})})})}),/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:1,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Expense Breakdown by Category\"}),expenseAnalysis!==null&&expenseAnalysis!==void 0&&expenseAnalysis.by_category&&Object.keys(expenseAnalysis.by_category).length>0?/*#__PURE__*/_jsx(Box,{sx:{height:300},children:/*#__PURE__*/_jsx(Pie,{data:getExpenseChartData(),options:{maintainAspectRatio:false}})}):/*#__PURE__*/_jsx(Typography,{children:\"No expense data available for analysis\"})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Expense Reduction Recommendations\"}),expenseAnalysis!==null&&expenseAnalysis!==void 0&&expenseAnalysis.recommendations&&expenseAnalysis.recommendations.length>0?/*#__PURE__*/_jsx(List,{children:expenseAnalysis.recommendations.map((recommendation,index)=>/*#__PURE__*/_jsxs(ListItem,{divider:index<expenseAnalysis.recommendations.length-1,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(TrendingDown,{color:\"error\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:recommendation.recommendation,secondary:recommendation.details,primaryTypographyProps:{fontWeight:'medium'}})]},index))}):/*#__PURE__*/_jsx(Typography,{children:\"No recommendations available\"})]})})})]})}),/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:2,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Savings Status\"}),savingsPlan?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mb:2},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Box,{sx:{p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"overline\",color:\"text.secondary\",children:\"Current Savings\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",color:\"primary\",fontWeight:\"bold\",children:[\"\\u20B9\",savingsPlan.current_savings.toLocaleString()]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"(\",savingsPlan.current_savings_percent,\"% of income)\"]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Box,{sx:{p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"overline\",color:\"text.secondary\",children:\"Target Savings\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",color:\"success.main\",fontWeight:\"bold\",children:[\"\\u20B9\",savingsPlan.target_amount.toLocaleString()]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"(\",savingsPlan.target_percent,\"% of income)\"]})]})})]}),/*#__PURE__*/_jsxs(Alert,{severity:savingsPlan.savings_gap>0?\"warning\":\"success\",sx:{mt:2},children:[/*#__PURE__*/_jsx(AlertTitle,{children:savingsPlan.savings_gap>0?\"Savings Gap: ₹\"+savingsPlan.savings_gap.toLocaleString():\"You're meeting your savings target!\"}),savingsPlan.savings_gap>0?\"Implement the recommended strategies to close this gap.\":\"Keep up the good work with your savings habits.\"]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,fontWeight:\"medium\",children:[\"Emergency Fund Goal: \\u20B9\",savingsPlan.emergency_fund_target.toLocaleString()]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:[\"Estimated time to achieve: \",savingsPlan.months_to_emergency_fund,\" months\"]})]})]}):/*#__PURE__*/_jsx(Typography,{children:\"No savings plan data available\"})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Savings Strategies\"}),savingsPlan!==null&&savingsPlan!==void 0&&savingsPlan.strategies&&savingsPlan.strategies.length>0?/*#__PURE__*/_jsx(List,{children:savingsPlan.strategies.map((strategy,index)=>/*#__PURE__*/_jsxs(ListItem,{divider:index<savingsPlan.strategies.length-1,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Savings,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:strategy.name,secondary:/*#__PURE__*/_jsxs(_Fragment,{children:[strategy.description,/*#__PURE__*/_jsxs(Box,{sx:{mt:1},children:[/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Impact: ${strategy.potential_impact}`,color:\"primary\",variant:\"outlined\",sx:{mr:1}}),/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Difficulty: ${strategy.difficulty}`,color:strategy.difficulty==='Easy'?'success':strategy.difficulty==='Medium'?'warning':'error',variant:\"outlined\"})]})]}),primaryTypographyProps:{fontWeight:'medium'}})]},index))}):/*#__PURE__*/_jsx(Typography,{children:\"No savings strategies available\"})]})})})]})}),/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:3,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Tax Analysis\"}),taxSuggestions!==null&&taxSuggestions!==void 0&&taxSuggestions.tax_analysis?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Annual Income Estimate\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",color:\"text.primary\",fontWeight:\"bold\",children:[\"\\u20B9\",taxSuggestions.tax_analysis.annual_income_estimate.toLocaleString()]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:taxSuggestions.tax_analysis.tax_bracket})]}),/*#__PURE__*/_jsxs(Alert,{severity:\"info\",sx:{mb:2},children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Estimated Tax Liability\"}),\"\\u20B9\",taxSuggestions.tax_analysis.estimated_tax_liability.toLocaleString()]})]}):/*#__PURE__*/_jsx(Typography,{children:\"No tax analysis available\"})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Tax Optimization Suggestions\"}),taxSuggestions!==null&&taxSuggestions!==void 0&&taxSuggestions.tax_suggestions&&taxSuggestions.tax_suggestions.length>0?/*#__PURE__*/_jsx(List,{children:taxSuggestions.tax_suggestions.map((suggestion,index)=>/*#__PURE__*/_jsxs(ListItem,{divider:index<taxSuggestions.tax_suggestions.length-1,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Calculate,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:suggestion.title,secondary:/*#__PURE__*/_jsxs(_Fragment,{children:[suggestion.description,/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"success.main\",sx:{mt:1},children:[\"Potential savings: \\u20B9\",suggestion.potential_savings.toLocaleString()]})]}),primaryTypographyProps:{fontWeight:'medium'}})]},index))}):/*#__PURE__*/_jsx(Typography,{children:\"No tax suggestions available\"})]})})})]})}),/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:4,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Seasonal Income Analysis\"}),lowIncomePlan!==null&&lowIncomePlan!==void 0&&lowIncomePlan.income_analysis?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{sx:{mb:3},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Box,{sx:{p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"overline\",color:\"text.secondary\",children:\"Avg. Monthly Income\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",color:\"primary\",fontWeight:\"bold\",children:[\"\\u20B9\",lowIncomePlan.income_analysis.average_monthly_income.toLocaleString()]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Box,{sx:{p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"overline\",color:\"text.secondary\",children:\"Avg. Monthly Expenses\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",color:\"error.main\",fontWeight:\"bold\",children:[\"\\u20B9\",lowIncomePlan.income_analysis.average_monthly_expenses.toLocaleString()]})]})})]})}),/*#__PURE__*/_jsxs(Alert,{severity:\"warning\",sx:{mb:3},children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Low Income Months Identified\"}),lowIncomePlan.income_analysis.low_income_months.length>0?\"Your income tends to be lower during: \"+lowIncomePlan.income_analysis.low_income_months.join(\", \"):\"No consistent low-income periods identified yet. Keep tracking your income.\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,fontWeight:\"medium\",children:\"Recommended Emergency Fund\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"success.main\",fontWeight:\"bold\",children:[\"\\u20B9\",lowIncomePlan.income_analysis.emergency_fund_target.toLocaleString()]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Target 3 months of expenses to weather low-income periods\"})]}):/*#__PURE__*/_jsx(Typography,{children:\"No seasonal income analysis available\"})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Seasonal Planning Strategies\"}),lowIncomePlan!==null&&lowIncomePlan!==void 0&&lowIncomePlan.strategies&&lowIncomePlan.strategies.length>0?/*#__PURE__*/_jsx(List,{children:lowIncomePlan.strategies.map((strategy,index)=>/*#__PURE__*/_jsxs(ListItem,{divider:index<lowIncomePlan.strategies.length-1,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CalendarMonth,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:strategy.title,secondary:/*#__PURE__*/_jsxs(_Fragment,{children:[strategy.description,/*#__PURE__*/_jsxs(Box,{sx:{mt:1},children:[/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Impact: ${strategy.impact}`,color:strategy.impact==='High'?'success':strategy.impact==='Medium'?'primary':'default',variant:\"outlined\",sx:{mr:1}}),/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Timeline: ${strategy.timeline}`,color:\"primary\",variant:\"outlined\"})]})]}),primaryTypographyProps:{fontWeight:'medium'}})]},index))}):/*#__PURE__*/_jsx(Typography,{children:\"No seasonal planning strategies available\"})]})})})]})})]}),/*#__PURE__*/_jsx(Box,{sx:{mt:3,display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:fetchAllInsights,disabled:loading||!currentUser,startIcon:loading?/*#__PURE__*/_jsx(CircularProgress,{size:20}):undefined,children:loading?'Refreshing...':'Refresh Insights'})})]});};export default AIInsightsDashboard;","map":{"version":3,"names":["React","useState","useEffect","useSelector","Box","Typography","Card","CardContent","Grid","Button","CircularProgress","Tabs","Tab","List","ListItem","ListItemIcon","ListItemText","Chip","Alert","AlertTitle","TrendingDown","Savings","Calculate","CalendarMonth","CheckCircle","Warning","Info","Category","aiPredictionService","getCurrentUser","Line","Pie","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","TabPanel","props","children","value","index","other","role","hidden","id","sx","pt","formatCurrency","amount","Intl","NumberFormat","style","currency","maximumFractionDigits","format","RecommendationAlert","_ref","type","title","description","severity","icon","mb","AIInsightsDashboard","activeTab","setActiveTab","loading","setLoading","error","setError","incomeForecast","setIncomeForecast","expenseAnalysis","setExpenseAnalysis","savingsPlan","setSavingsPlan","taxSuggestions","setTaxSuggestions","lowIncomePlan","setLowIncomePlan","currentUser","incomeData","state","_state$income","income","incomeList","expenseData","_state$expense","expense","expenses","fetchAllInsights","handleTabChange","event","newValue","incomeForecastRes","expenseAnalysisRes","savingsPlanRes","taxSuggestionsRes","lowIncomePlanRes","Promise","all","getIncomeForecast","getExpenseAnalysis","getSavingsPlan","getTaxSuggestions","getLowIncomePreparation","forecast","analysis","plan","err","console","getIncomeChartData","monthly","labels","datasets","label","data","fill","backgroundColor","borderColor","tension","months","map","m","month","amounts","predicted_amount","getExpenseChartData","by_category","borderWidth","categories","Object","keys","cat","total","backgroundColors","_","i","hue","display","alignItems","justifyContent","variant","fontWeight","color","category","my","borderBottom","onChange","container","spacing","item","xs","gutterBottom","height","options","maintainAspectRatio","md","length","recommendations","recommendation","divider","primary","secondary","details","primaryTypographyProps","p","bgcolor","borderRadius","current_savings","toLocaleString","current_savings_percent","target_amount","target_percent","savings_gap","mt","emergency_fund_target","months_to_emergency_fund","strategies","strategy","name","size","potential_impact","mr","difficulty","tax_analysis","annual_income_estimate","tax_bracket","estimated_tax_liability","tax_suggestions","suggestion","potential_savings","income_analysis","average_monthly_income","average_monthly_expenses","low_income_months","join","impact","timeline","onClick","disabled","startIcon","undefined"],"sources":["C:/Users/mishr/OneDrive/Desktop/gig_website_tracker/gig-budget-app/src/components/ai/AIInsightsDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Card, \r\n  CardContent, \r\n  Grid,\r\n  Button,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  Chip,\r\n  Alert,\r\n  AlertTitle\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Savings,\r\n  Calculate,\r\n  CalendarMonth,\r\n  CheckCircle,\r\n  Warning,\r\n  Info,\r\n  BarChart,\r\n  PieChart,\r\n  ShowChart,\r\n  Category\r\n} from '@mui/icons-material';\r\nimport { RootState } from '../../store';\r\nimport { Income, Expense } from '../../store/types';\r\nimport * as aiPredictionService from '../../services/aiPredictionService';\r\nimport { getCurrentUser } from '../../services/authService';\r\nimport { Line, Bar, Pie } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// Tab panel interface\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\n// Custom TabPanel component\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`insights-tabpanel-${index}`}\r\n      aria-labelledby={`insights-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ pt: 3 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Currency formatter\r\nconst formatCurrency = (amount: number) => {\r\n  return new Intl.NumberFormat('en-IN', {\r\n    style: 'currency',\r\n    currency: 'INR',\r\n    maximumFractionDigits: 0\r\n  }).format(amount);\r\n};\r\n\r\n// Component to handle recommendation severity\r\nconst RecommendationAlert = ({ type, title, description }: { type: string, title: string, description: string }) => {\r\n  let severity: 'error' | 'warning' | 'info' | 'success' = 'info';\r\n  let icon = <Info />;\r\n  \r\n  switch (type) {\r\n    case 'urgent':\r\n      severity = 'error';\r\n      icon = <Warning />;\r\n      break;\r\n    case 'important':\r\n      severity = 'warning';\r\n      icon = <Warning />;\r\n      break;\r\n    case 'consideration':\r\n      severity = 'info';\r\n      icon = <Info />;\r\n      break;\r\n    case 'success':\r\n      severity = 'success';\r\n      icon = <CheckCircle />;\r\n      break;\r\n    default:\r\n      severity = 'info';\r\n  }\r\n  \r\n  return (\r\n    <Alert severity={severity} icon={icon} sx={{ mb: 2 }}>\r\n      <AlertTitle>{title}</AlertTitle>\r\n      {description}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nconst AIInsightsDashboard: React.FC = () => {\r\n  // State\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  \r\n  // AI insights state\r\n  const [incomeForecast, setIncomeForecast] = useState<any>(null);\r\n  const [expenseAnalysis, setExpenseAnalysis] = useState<any>(null);\r\n  const [savingsPlan, setSavingsPlan] = useState<any>(null);\r\n  const [taxSuggestions, setTaxSuggestions] = useState<any>(null);\r\n  const [lowIncomePlan, setLowIncomePlan] = useState<any>(null);\r\n  \r\n  // Get the current user for category-specific insights\r\n  const currentUser = getCurrentUser();\r\n  \r\n  // Get data from Redux store\r\n  const incomeData = useSelector((state: RootState) => state.income?.incomeList || []);\r\n  const expenseData = useSelector((state: RootState) => state.expense?.expenses || []);\r\n  \r\n  // Fetch AI insights on component mount\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      fetchAllInsights();\r\n    } else {\r\n      setLoading(false);\r\n      setError('Please log in to view AI insights.');\r\n    }\r\n  }, [currentUser]);\r\n  \r\n  // Handle tab change\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setActiveTab(newValue);\r\n  };\r\n  \r\n  // Fetch all AI insights\r\n  const fetchAllInsights = async () => {\r\n    if (!currentUser) return;\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Fetch all insights in parallel using the user's category\r\n      const [\r\n        incomeForecastRes,\r\n        expenseAnalysisRes,\r\n        savingsPlanRes,\r\n        taxSuggestionsRes,\r\n        lowIncomePlanRes\r\n      ] = await Promise.all([\r\n        aiPredictionService.getIncomeForecast(currentUser),\r\n        aiPredictionService.getExpenseAnalysis(currentUser),\r\n        aiPredictionService.getSavingsPlan(currentUser),\r\n        aiPredictionService.getTaxSuggestions(currentUser),\r\n        aiPredictionService.getLowIncomePreparation(currentUser)\r\n      ]);\r\n      \r\n      // Update state with responses\r\n      setIncomeForecast(incomeForecastRes.forecast);\r\n      setExpenseAnalysis(expenseAnalysisRes.analysis);\r\n      setSavingsPlan(savingsPlanRes.plan);\r\n      setTaxSuggestions(taxSuggestionsRes);\r\n      setLowIncomePlan(lowIncomePlanRes);\r\n      \r\n    } catch (err) {\r\n      console.error('Error fetching AI insights:', err);\r\n      setError('Failed to fetch AI insights. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Income Forecast Chart Data\r\n  const getIncomeChartData = () => {\r\n    if (!incomeForecast || !incomeForecast.monthly) return {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: 'Predicted Income',\r\n          data: [],\r\n          fill: false,\r\n          backgroundColor: 'rgba(46, 125, 50, 0.2)',\r\n          borderColor: 'rgba(46, 125, 50, 1)',\r\n          tension: 0.1\r\n        }\r\n      ]\r\n    };\r\n    \r\n    const months = incomeForecast.monthly.map((m: any) => m.month);\r\n    const amounts = incomeForecast.monthly.map((m: any) => m.predicted_amount);\r\n    \r\n    return {\r\n      labels: months,\r\n      datasets: [\r\n        {\r\n          label: 'Predicted Income',\r\n          data: amounts,\r\n          fill: false,\r\n          backgroundColor: 'rgba(46, 125, 50, 0.2)',\r\n          borderColor: 'rgba(46, 125, 50, 1)',\r\n          tension: 0.1\r\n        }\r\n      ]\r\n    };\r\n  };\r\n  \r\n  // Expense By Category Chart Data\r\n  const getExpenseChartData = () => {\r\n    if (!expenseAnalysis || !expenseAnalysis.by_category) return {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          data: [],\r\n          backgroundColor: [],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    };\r\n    \r\n    const categories = Object.keys(expenseAnalysis.by_category);\r\n    const amounts = categories.map(cat => expenseAnalysis.by_category[cat].total);\r\n    \r\n    // Generate colors for each category\r\n    const backgroundColors = categories.map((_, i) => {\r\n      const hue = (i * 30) % 360;\r\n      return `hsla(${hue}, 60%, 60%, 0.8)`;\r\n    });\r\n    \r\n    return {\r\n      labels: categories,\r\n      datasets: [\r\n        {\r\n          data: amounts,\r\n          backgroundColor: backgroundColors,\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    };\r\n  };\r\n  \r\n  // Render insights dashboard\r\n  return (\r\n    <Box>\r\n      {/* Header with category info */}\r\n      <Box sx={{ mb: 3, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <Box>\r\n          <Typography variant=\"h4\" sx={{ mb: 1, fontWeight: 'bold' }}>\r\n            AI Financial Insights\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            Personalized financial analysis powered by machine learning\r\n          </Typography>\r\n        </Box>\r\n        {currentUser && (\r\n          <Chip\r\n            icon={<Category />}\r\n            label={`Category: ${currentUser.category}`}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          />\r\n        )}\r\n      </Box>\r\n      \r\n      {error ? (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      ) : loading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 5 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {/* Navigation tabs */}\r\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n            <Tabs value={activeTab} onChange={handleTabChange} aria-label=\"insight tabs\">\r\n              <Tab label=\"Income Forecast\" />\r\n              <Tab label=\"Expense Analysis\" />\r\n              <Tab label=\"Savings Plan\" />\r\n              <Tab label=\"Tax Optimization\" />\r\n              <Tab label=\"Seasonal Planning\" />\r\n            </Tabs>\r\n          </Box>\r\n          \r\n          {/* Tab panels for insights */}\r\n          {/* Income Forecast */}\r\n          <TabPanel value={activeTab} index={0}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Monthly Income Forecast for {currentUser?.category}\r\n                    </Typography>\r\n                    {incomeForecast?.monthly && (\r\n                      <Box sx={{ height: 300 }}>\r\n                        <Line data={getIncomeChartData()} options={{ maintainAspectRatio: false }} />\r\n                      </Box>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              \r\n              {/* Add more income forecast insights */}\r\n            </Grid>\r\n          </TabPanel>\r\n          \r\n          {/* Expense Analysis */}\r\n          <TabPanel value={activeTab} index={1}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Expense Breakdown by Category\r\n                    </Typography>\r\n                    {expenseAnalysis?.by_category && Object.keys(expenseAnalysis.by_category).length > 0 ? (\r\n                      <Box sx={{ height: 300 }}>\r\n                        <Pie data={getExpenseChartData()} options={{ maintainAspectRatio: false }} />\r\n                      </Box>\r\n                    ) : (\r\n                      <Typography>No expense data available for analysis</Typography>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Expense Reduction Recommendations\r\n                    </Typography>\r\n                    {expenseAnalysis?.recommendations && expenseAnalysis.recommendations.length > 0 ? (\r\n                      <List>\r\n                        {expenseAnalysis.recommendations.map((recommendation: any, index: number) => (\r\n                          <ListItem key={index} divider={index < expenseAnalysis.recommendations.length - 1}>\r\n                            <ListItemIcon>\r\n                              <TrendingDown color=\"error\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={recommendation.recommendation}\r\n                              secondary={recommendation.details}\r\n                              primaryTypographyProps={{ fontWeight: 'medium' }}\r\n                            />\r\n                          </ListItem>\r\n                        ))}\r\n                      </List>\r\n                    ) : (\r\n                      <Typography>No recommendations available</Typography>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </TabPanel>\r\n          \r\n          {/* Savings Plan */}\r\n          <TabPanel value={activeTab} index={2}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Savings Status\r\n                    </Typography>\r\n                    {savingsPlan ? (\r\n                      <>\r\n                        <Grid container spacing={2} sx={{ mb: 2 }}>\r\n                          <Grid item xs={6}>\r\n                            <Box sx={{ p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\r\n                              <Typography variant=\"overline\" color=\"text.secondary\">Current Savings</Typography>\r\n                              <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\">\r\n                                ₹{savingsPlan.current_savings.toLocaleString()}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\">\r\n                                ({savingsPlan.current_savings_percent}% of income)\r\n                              </Typography>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <Box sx={{ p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\r\n                              <Typography variant=\"overline\" color=\"text.secondary\">Target Savings</Typography>\r\n                              <Typography variant=\"h5\" color=\"success.main\" fontWeight=\"bold\">\r\n                                ₹{savingsPlan.target_amount.toLocaleString()}\r\n                              </Typography>\r\n                              <Typography variant=\"body2\">\r\n                                ({savingsPlan.target_percent}% of income)\r\n                              </Typography>\r\n                            </Box>\r\n                          </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Alert severity={savingsPlan.savings_gap > 0 ? \"warning\" : \"success\"} sx={{ mt: 2 }}>\r\n                          <AlertTitle>\r\n                            {savingsPlan.savings_gap > 0 \r\n                              ? \"Savings Gap: ₹\" + savingsPlan.savings_gap.toLocaleString() \r\n                              : \"You're meeting your savings target!\"}\r\n                          </AlertTitle>\r\n                          {savingsPlan.savings_gap > 0 \r\n                            ? \"Implement the recommended strategies to close this gap.\" \r\n                            : \"Keep up the good work with your savings habits.\"}\r\n                        </Alert>\r\n                        \r\n                        <Box sx={{ mt: 3 }}>\r\n                          <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"medium\">\r\n                            Emergency Fund Goal: ₹{savingsPlan.emergency_fund_target.toLocaleString()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                            Estimated time to achieve: {savingsPlan.months_to_emergency_fund} months\r\n                          </Typography>\r\n                        </Box>\r\n                      </>\r\n                    ) : (\r\n                      <Typography>No savings plan data available</Typography>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Savings Strategies\r\n                    </Typography>\r\n                    {savingsPlan?.strategies && savingsPlan.strategies.length > 0 ? (\r\n                      <List>\r\n                        {savingsPlan.strategies.map((strategy: any, index: number) => (\r\n                          <ListItem key={index} divider={index < savingsPlan.strategies.length - 1}>\r\n                            <ListItemIcon>\r\n                              <Savings color=\"primary\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={strategy.name}\r\n                              secondary={\r\n                                <>\r\n                                  {strategy.description}\r\n                                  <Box sx={{ mt: 1 }}>\r\n                                    <Chip \r\n                                      size=\"small\" \r\n                                      label={`Impact: ${strategy.potential_impact}`} \r\n                                      color=\"primary\" \r\n                                      variant=\"outlined\"\r\n                                      sx={{ mr: 1 }}\r\n                                    />\r\n                                    <Chip \r\n                                      size=\"small\" \r\n                                      label={`Difficulty: ${strategy.difficulty}`} \r\n                                      color={strategy.difficulty === 'Easy' ? 'success' : (strategy.difficulty === 'Medium' ? 'warning' : 'error')}\r\n                                      variant=\"outlined\"\r\n                                    />\r\n                                  </Box>\r\n                                </>\r\n                              }\r\n                              primaryTypographyProps={{ fontWeight: 'medium' }}\r\n                            />\r\n                          </ListItem>\r\n                        ))}\r\n                      </List>\r\n                    ) : (\r\n                      <Typography>No savings strategies available</Typography>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </TabPanel>\r\n          \r\n          {/* Tax Optimization */}\r\n          <TabPanel value={activeTab} index={3}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Tax Analysis\r\n                    </Typography>\r\n                    {taxSuggestions?.tax_analysis ? (\r\n                      <>\r\n                        <Box sx={{ mb: 3 }}>\r\n                          <Typography variant=\"subtitle1\" gutterBottom>\r\n                            Annual Income Estimate\r\n                          </Typography>\r\n                          <Typography variant=\"h5\" color=\"text.primary\" fontWeight=\"bold\">\r\n                            ₹{taxSuggestions.tax_analysis.annual_income_estimate.toLocaleString()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {taxSuggestions.tax_analysis.tax_bracket}\r\n                          </Typography>\r\n                        </Box>\r\n                        \r\n                        <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                          <AlertTitle>Estimated Tax Liability</AlertTitle>\r\n                          ₹{taxSuggestions.tax_analysis.estimated_tax_liability.toLocaleString()}\r\n                        </Alert>\r\n                      </>\r\n                    ) : (\r\n                      <Typography>No tax analysis available</Typography>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Tax Optimization Suggestions\r\n                    </Typography>\r\n                    {taxSuggestions?.tax_suggestions && taxSuggestions.tax_suggestions.length > 0 ? (\r\n                      <List>\r\n                        {taxSuggestions.tax_suggestions.map((suggestion: any, index: number) => (\r\n                          <ListItem key={index} divider={index < taxSuggestions.tax_suggestions.length - 1}>\r\n                            <ListItemIcon>\r\n                              <Calculate color=\"primary\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={suggestion.title}\r\n                              secondary={\r\n                                <>\r\n                                  {suggestion.description}\r\n                                  <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n                                    Potential savings: ₹{suggestion.potential_savings.toLocaleString()}\r\n                                  </Typography>\r\n                                </>\r\n                              }\r\n                              primaryTypographyProps={{ fontWeight: 'medium' }}\r\n                            />\r\n                          </ListItem>\r\n                        ))}\r\n                      </List>\r\n                    ) : (\r\n                      <Typography>No tax suggestions available</Typography>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </TabPanel>\r\n          \r\n          {/* Seasonal Planning */}\r\n          <TabPanel value={activeTab} index={4}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Seasonal Income Analysis\r\n                    </Typography>\r\n                    {lowIncomePlan?.income_analysis ? (\r\n                      <>\r\n                        <Box sx={{ mb: 3 }}>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                              <Box sx={{ p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\r\n                                <Typography variant=\"overline\" color=\"text.secondary\">Avg. Monthly Income</Typography>\r\n                                <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\">\r\n                                  ₹{lowIncomePlan.income_analysis.average_monthly_income.toLocaleString()}\r\n                                </Typography>\r\n                              </Box>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <Box sx={{ p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\r\n                                <Typography variant=\"overline\" color=\"text.secondary\">Avg. Monthly Expenses</Typography>\r\n                                <Typography variant=\"h5\" color=\"error.main\" fontWeight=\"bold\">\r\n                                  ₹{lowIncomePlan.income_analysis.average_monthly_expenses.toLocaleString()}\r\n                                </Typography>\r\n                              </Box>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Box>\r\n                        \r\n                        <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n                          <AlertTitle>Low Income Months Identified</AlertTitle>\r\n                          {lowIncomePlan.income_analysis.low_income_months.length > 0 \r\n                            ? \"Your income tends to be lower during: \" + lowIncomePlan.income_analysis.low_income_months.join(\", \")\r\n                            : \"No consistent low-income periods identified yet. Keep tracking your income.\"\r\n                          }\r\n                        </Alert>\r\n                        \r\n                        <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"medium\">\r\n                          Recommended Emergency Fund\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" color=\"success.main\" fontWeight=\"bold\">\r\n                          ₹{lowIncomePlan.income_analysis.emergency_fund_target.toLocaleString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                          Target 3 months of expenses to weather low-income periods\r\n                        </Typography>\r\n                      </>\r\n                    ) : (\r\n                      <Typography>No seasonal income analysis available</Typography>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Seasonal Planning Strategies\r\n                    </Typography>\r\n                    {lowIncomePlan?.strategies && lowIncomePlan.strategies.length > 0 ? (\r\n                      <List>\r\n                        {lowIncomePlan.strategies.map((strategy: any, index: number) => (\r\n                          <ListItem key={index} divider={index < lowIncomePlan.strategies.length - 1}>\r\n                            <ListItemIcon>\r\n                              <CalendarMonth color=\"primary\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={strategy.title}\r\n                              secondary={\r\n                                <>\r\n                                  {strategy.description}\r\n                                  <Box sx={{ mt: 1 }}>\r\n                                    <Chip \r\n                                      size=\"small\" \r\n                                      label={`Impact: ${strategy.impact}`} \r\n                                      color={strategy.impact === 'High' ? 'success' : (strategy.impact === 'Medium' ? 'primary' : 'default')}\r\n                                      variant=\"outlined\"\r\n                                      sx={{ mr: 1 }}\r\n                                    />\r\n                                    <Chip \r\n                                      size=\"small\" \r\n                                      label={`Timeline: ${strategy.timeline}`} \r\n                                      color=\"primary\"\r\n                                      variant=\"outlined\"\r\n                                    />\r\n                                  </Box>\r\n                                </>\r\n                              }\r\n                              primaryTypographyProps={{ fontWeight: 'medium' }}\r\n                            />\r\n                          </ListItem>\r\n                        ))}\r\n                      </List>\r\n                    ) : (\r\n                      <Typography>No seasonal planning strategies available</Typography>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </TabPanel>\r\n          \r\n          {/* Tab content for other tabs... */}\r\n        </>\r\n      )}\r\n      \r\n      {/* Refresh button */}\r\n      <Box sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={fetchAllInsights}\r\n          disabled={loading || !currentUser}\r\n          startIcon={loading ? <CircularProgress size={20} /> : undefined}\r\n        >\r\n          {loading ? 'Refreshing...' : 'Refresh Insights'}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AIInsightsDashboard; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,aAAa,CACzC,OACEC,GAAG,CACHC,UAAU,CACVC,IAAI,CACJC,WAAW,CACXC,IAAI,CACJC,MAAM,CACNC,gBAAgB,CAChBC,IAAI,CACJC,GAAG,CAEHC,IAAI,CACJC,QAAQ,CACRC,YAAY,CACZC,YAAY,CAEZC,IAAI,CACJC,KAAK,CACLC,UAAU,KACL,eAAe,CACtB,OAEEC,YAAY,CACZC,OAAO,CACPC,SAAS,CACTC,aAAa,CACbC,WAAW,CACXC,OAAO,CACPC,IAAI,CAIJC,QAAQ,KACH,qBAAqB,CAG5B,MAAO,GAAK,CAAAC,mBAAmB,KAAM,oCAAoC,CACzE,OAASC,cAAc,KAAQ,4BAA4B,CAC3D,OAASC,IAAI,CAAOC,GAAG,KAAQ,iBAAiB,CAChD,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,UAAU,CACVC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CAEjB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACAf,OAAO,CAACgB,QAAQ,CACdf,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,UAAU,CACVC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MACF,CAAC,CAED;AAOA;AACA,QAAS,CAAAQ,QAAQA,CAACC,KAAoB,CAAE,CACtC,KAAM,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,KAAK,CAAE,GAAGC,KAAM,CAAC,CAAGJ,KAAK,CAElD,mBACEP,IAAA,QACEY,IAAI,CAAC,UAAU,CACfC,MAAM,CAAEJ,KAAK,GAAKC,KAAM,CACxBI,EAAE,CAAE,qBAAqBJ,KAAK,EAAG,CACjC,kBAAiB,gBAAgBA,KAAK,EAAG,IACrCC,KAAK,CAAAH,QAAA,CAERC,KAAK,GAAKC,KAAK,eACdV,IAAA,CAACxC,GAAG,EAACuD,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAR,QAAA,CAChBA,QAAQ,CACN,CACN,CACE,CAAC,CAEV,CAEA;AACA,KAAM,CAAAS,cAAc,CAAIC,MAAc,EAAK,CACzC,MAAO,IAAI,CAAAC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CACpCC,KAAK,CAAE,UAAU,CACjBC,QAAQ,CAAE,KAAK,CACfC,qBAAqB,CAAE,CACzB,CAAC,CAAC,CAACC,MAAM,CAACN,MAAM,CAAC,CACnB,CAAC,CAED;AACA,KAAM,CAAAO,mBAAmB,CAAGC,IAAA,EAAwF,IAAvF,CAAEC,IAAI,CAAEC,KAAK,CAAEC,WAAkE,CAAC,CAAAH,IAAA,CAC7G,GAAI,CAAAI,QAAkD,CAAG,MAAM,CAC/D,GAAI,CAAAC,IAAI,cAAG/B,IAAA,CAAClB,IAAI,GAAE,CAAC,CAEnB,OAAQ6C,IAAI,EACV,IAAK,QAAQ,CACXG,QAAQ,CAAG,OAAO,CAClBC,IAAI,cAAG/B,IAAA,CAACnB,OAAO,GAAE,CAAC,CAClB,MACF,IAAK,WAAW,CACdiD,QAAQ,CAAG,SAAS,CACpBC,IAAI,cAAG/B,IAAA,CAACnB,OAAO,GAAE,CAAC,CAClB,MACF,IAAK,eAAe,CAClBiD,QAAQ,CAAG,MAAM,CACjBC,IAAI,cAAG/B,IAAA,CAAClB,IAAI,GAAE,CAAC,CACf,MACF,IAAK,SAAS,CACZgD,QAAQ,CAAG,SAAS,CACpBC,IAAI,cAAG/B,IAAA,CAACpB,WAAW,GAAE,CAAC,CACtB,MACF,QACEkD,QAAQ,CAAG,MAAM,CACrB,CAEA,mBACE5B,KAAA,CAAC5B,KAAK,EAACwD,QAAQ,CAAEA,QAAS,CAACC,IAAI,CAAEA,IAAK,CAAChB,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAE,CAAE,CAAAxB,QAAA,eACnDR,IAAA,CAACzB,UAAU,EAAAiC,QAAA,CAAEoB,KAAK,CAAa,CAAC,CAC/BC,WAAW,EACP,CAAC,CAEZ,CAAC,CAED,KAAM,CAAAI,mBAA6B,CAAGA,CAAA,GAAM,CAC1C;AACA,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAG9E,QAAQ,CAAC,CAAC,CAAC,CAC7C,KAAM,CAAC+E,OAAO,CAAEC,UAAU,CAAC,CAAGhF,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACiF,KAAK,CAAEC,QAAQ,CAAC,CAAGlF,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACA,KAAM,CAACmF,cAAc,CAAEC,iBAAiB,CAAC,CAAGpF,QAAQ,CAAM,IAAI,CAAC,CAC/D,KAAM,CAACqF,eAAe,CAAEC,kBAAkB,CAAC,CAAGtF,QAAQ,CAAM,IAAI,CAAC,CACjE,KAAM,CAACuF,WAAW,CAAEC,cAAc,CAAC,CAAGxF,QAAQ,CAAM,IAAI,CAAC,CACzD,KAAM,CAACyF,cAAc,CAAEC,iBAAiB,CAAC,CAAG1F,QAAQ,CAAM,IAAI,CAAC,CAC/D,KAAM,CAAC2F,aAAa,CAAEC,gBAAgB,CAAC,CAAG5F,QAAQ,CAAM,IAAI,CAAC,CAE7D;AACA,KAAM,CAAA6F,WAAW,CAAGjE,cAAc,CAAC,CAAC,CAEpC;AACA,KAAM,CAAAkE,UAAU,CAAG5F,WAAW,CAAE6F,KAAgB,OAAAC,aAAA,OAAK,EAAAA,aAAA,CAAAD,KAAK,CAACE,MAAM,UAAAD,aAAA,iBAAZA,aAAA,CAAcE,UAAU,GAAI,EAAE,GAAC,CACpF,KAAM,CAAAC,WAAW,CAAGjG,WAAW,CAAE6F,KAAgB,OAAAK,cAAA,OAAK,EAAAA,cAAA,CAAAL,KAAK,CAACM,OAAO,UAAAD,cAAA,iBAAbA,cAAA,CAAeE,QAAQ,GAAI,EAAE,GAAC,CAEpF;AACArG,SAAS,CAAC,IAAM,CACd,GAAI4F,WAAW,CAAE,CACfU,gBAAgB,CAAC,CAAC,CACpB,CAAC,IAAM,CACLvB,UAAU,CAAC,KAAK,CAAC,CACjBE,QAAQ,CAAC,oCAAoC,CAAC,CAChD,CACF,CAAC,CAAE,CAACW,WAAW,CAAC,CAAC,CAEjB;AACA,KAAM,CAAAW,eAAe,CAAGA,CAACC,KAA2B,CAAEC,QAAgB,GAAK,CACzE5B,YAAY,CAAC4B,QAAQ,CAAC,CACxB,CAAC,CAED;AACA,KAAM,CAAAH,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CAACV,WAAW,CAAE,OAElBb,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CAEZ,GAAI,CACF;AACA,KAAM,CACJyB,iBAAiB,CACjBC,kBAAkB,CAClBC,cAAc,CACdC,iBAAiB,CACjBC,gBAAgB,CACjB,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACpBtF,mBAAmB,CAACuF,iBAAiB,CAACrB,WAAW,CAAC,CAClDlE,mBAAmB,CAACwF,kBAAkB,CAACtB,WAAW,CAAC,CACnDlE,mBAAmB,CAACyF,cAAc,CAACvB,WAAW,CAAC,CAC/ClE,mBAAmB,CAAC0F,iBAAiB,CAACxB,WAAW,CAAC,CAClDlE,mBAAmB,CAAC2F,uBAAuB,CAACzB,WAAW,CAAC,CACzD,CAAC,CAEF;AACAT,iBAAiB,CAACuB,iBAAiB,CAACY,QAAQ,CAAC,CAC7CjC,kBAAkB,CAACsB,kBAAkB,CAACY,QAAQ,CAAC,CAC/ChC,cAAc,CAACqB,cAAc,CAACY,IAAI,CAAC,CACnC/B,iBAAiB,CAACoB,iBAAiB,CAAC,CACpClB,gBAAgB,CAACmB,gBAAgB,CAAC,CAEpC,CAAE,MAAOW,GAAG,CAAE,CACZC,OAAO,CAAC1C,KAAK,CAAC,6BAA6B,CAAEyC,GAAG,CAAC,CACjDxC,QAAQ,CAAC,sDAAsD,CAAC,CAClE,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAA4C,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAI,CAACzC,cAAc,EAAI,CAACA,cAAc,CAAC0C,OAAO,CAAE,MAAO,CACrDC,MAAM,CAAE,EAAE,CACVC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,kBAAkB,CACzBC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,KAAK,CACXC,eAAe,CAAE,wBAAwB,CACzCC,WAAW,CAAE,sBAAsB,CACnCC,OAAO,CAAE,GACX,CAAC,CAEL,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGnD,cAAc,CAAC0C,OAAO,CAACU,GAAG,CAAEC,CAAM,EAAKA,CAAC,CAACC,KAAK,CAAC,CAC9D,KAAM,CAAAC,OAAO,CAAGvD,cAAc,CAAC0C,OAAO,CAACU,GAAG,CAAEC,CAAM,EAAKA,CAAC,CAACG,gBAAgB,CAAC,CAE1E,MAAO,CACLb,MAAM,CAAEQ,MAAM,CACdP,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,kBAAkB,CACzBC,IAAI,CAAES,OAAO,CACbR,IAAI,CAAE,KAAK,CACXC,eAAe,CAAE,wBAAwB,CACzCC,WAAW,CAAE,sBAAsB,CACnCC,OAAO,CAAE,GACX,CAAC,CAEL,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAO,mBAAmB,CAAGA,CAAA,GAAM,CAChC,GAAI,CAACvD,eAAe,EAAI,CAACA,eAAe,CAACwD,WAAW,CAAE,MAAO,CAC3Df,MAAM,CAAE,EAAE,CACVC,QAAQ,CAAE,CACR,CACEE,IAAI,CAAE,EAAE,CACRE,eAAe,CAAE,EAAE,CACnBW,WAAW,CAAE,CACf,CAAC,CAEL,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGC,MAAM,CAACC,IAAI,CAAC5D,eAAe,CAACwD,WAAW,CAAC,CAC3D,KAAM,CAAAH,OAAO,CAAGK,UAAU,CAACR,GAAG,CAACW,GAAG,EAAI7D,eAAe,CAACwD,WAAW,CAACK,GAAG,CAAC,CAACC,KAAK,CAAC,CAE7E;AACA,KAAM,CAAAC,gBAAgB,CAAGL,UAAU,CAACR,GAAG,CAAC,CAACc,CAAC,CAAEC,CAAC,GAAK,CAChD,KAAM,CAAAC,GAAG,CAAID,CAAC,CAAG,EAAE,CAAI,GAAG,CAC1B,MAAO,QAAQC,GAAG,kBAAkB,CACtC,CAAC,CAAC,CAEF,MAAO,CACLzB,MAAM,CAAEiB,UAAU,CAClBhB,QAAQ,CAAE,CACR,CACEE,IAAI,CAAES,OAAO,CACbP,eAAe,CAAEiB,gBAAgB,CACjCN,WAAW,CAAE,CACf,CAAC,CAEL,CAAC,CACH,CAAC,CAED;AACA,mBACEjG,KAAA,CAAC1C,GAAG,EAAAgD,QAAA,eAEFN,KAAA,CAAC1C,GAAG,EAACuD,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAC,CAAE6E,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEC,cAAc,CAAE,eAAgB,CAAE,CAAAvG,QAAA,eACzFN,KAAA,CAAC1C,GAAG,EAAAgD,QAAA,eACFR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACjG,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAC,CAAEiF,UAAU,CAAE,MAAO,CAAE,CAAAzG,QAAA,CAAC,uBAE5D,CAAY,CAAC,cACbR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,OAAO,CAACE,KAAK,CAAC,gBAAgB,CAAA1G,QAAA,CAAC,6DAEnD,CAAY,CAAC,EACV,CAAC,CACL0C,WAAW,eACVlD,IAAA,CAAC3B,IAAI,EACH0D,IAAI,cAAE/B,IAAA,CAACjB,QAAQ,GAAE,CAAE,CACnBsG,KAAK,CAAE,aAAanC,WAAW,CAACiE,QAAQ,EAAG,CAC3CD,KAAK,CAAC,SAAS,CACfF,OAAO,CAAC,UAAU,CACnB,CACF,EACE,CAAC,CAEL1E,KAAK,cACJtC,IAAA,CAAC1B,KAAK,EAACwD,QAAQ,CAAC,OAAO,CAACf,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAE,CAAE,CAAAxB,QAAA,CACnC8B,KAAK,CACD,CAAC,CACNF,OAAO,cACTpC,IAAA,CAACxC,GAAG,EAACuD,EAAE,CAAE,CAAE8F,OAAO,CAAE,MAAM,CAAEE,cAAc,CAAE,QAAQ,CAAEK,EAAE,CAAE,CAAE,CAAE,CAAA5G,QAAA,cAC5DR,IAAA,CAAClC,gBAAgB,GAAE,CAAC,CACjB,CAAC,cAENoC,KAAA,CAAAE,SAAA,EAAAI,QAAA,eAEER,IAAA,CAACxC,GAAG,EAACuD,EAAE,CAAE,CAAEsG,YAAY,CAAE,CAAC,CAAE5B,WAAW,CAAE,SAAU,CAAE,CAAAjF,QAAA,cACnDN,KAAA,CAACnC,IAAI,EAAC0C,KAAK,CAAEyB,SAAU,CAACoF,QAAQ,CAAEzD,eAAgB,CAAC,aAAW,cAAc,CAAArD,QAAA,eAC1ER,IAAA,CAAChC,GAAG,EAACqH,KAAK,CAAC,iBAAiB,CAAE,CAAC,cAC/BrF,IAAA,CAAChC,GAAG,EAACqH,KAAK,CAAC,kBAAkB,CAAE,CAAC,cAChCrF,IAAA,CAAChC,GAAG,EAACqH,KAAK,CAAC,cAAc,CAAE,CAAC,cAC5BrF,IAAA,CAAChC,GAAG,EAACqH,KAAK,CAAC,kBAAkB,CAAE,CAAC,cAChCrF,IAAA,CAAChC,GAAG,EAACqH,KAAK,CAAC,mBAAmB,CAAE,CAAC,EAC7B,CAAC,CACJ,CAAC,cAINrF,IAAA,CAACM,QAAQ,EAACG,KAAK,CAAEyB,SAAU,CAACxB,KAAK,CAAE,CAAE,CAAAF,QAAA,cACnCR,IAAA,CAACpC,IAAI,EAAC2J,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAhH,QAAA,cACzBR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAlH,QAAA,cAChBR,IAAA,CAACtC,IAAI,EAAA8C,QAAA,cACHN,KAAA,CAACvC,WAAW,EAAA6C,QAAA,eACVN,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAAnH,QAAA,EAAC,8BACR,CAAC0C,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEiE,QAAQ,EACxC,CAAC,CACZ,CAAA3E,cAAc,SAAdA,cAAc,iBAAdA,cAAc,CAAE0C,OAAO,gBACtBlF,IAAA,CAACxC,GAAG,EAACuD,EAAE,CAAE,CAAE6G,MAAM,CAAE,GAAI,CAAE,CAAApH,QAAA,cACvBR,IAAA,CAACd,IAAI,EAACoG,IAAI,CAAEL,kBAAkB,CAAC,CAAE,CAAC4C,OAAO,CAAE,CAAEC,mBAAmB,CAAE,KAAM,CAAE,CAAE,CAAC,CAC1E,CACN,EACU,CAAC,CACV,CAAC,CACH,CAAC,CAGH,CAAC,CACC,CAAC,cAGX9H,IAAA,CAACM,QAAQ,EAACG,KAAK,CAAEyB,SAAU,CAACxB,KAAK,CAAE,CAAE,CAAAF,QAAA,cACnCN,KAAA,CAACtC,IAAI,EAAC2J,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAhH,QAAA,eACzBR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,EAAG,CAACK,EAAE,CAAE,CAAE,CAAAvH,QAAA,cACvBR,IAAA,CAACtC,IAAI,EAAA8C,QAAA,cACHN,KAAA,CAACvC,WAAW,EAAA6C,QAAA,eACVR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAAnH,QAAA,CAAC,+BAEtC,CAAY,CAAC,CACZkC,eAAe,SAAfA,eAAe,WAAfA,eAAe,CAAEwD,WAAW,EAAIG,MAAM,CAACC,IAAI,CAAC5D,eAAe,CAACwD,WAAW,CAAC,CAAC8B,MAAM,CAAG,CAAC,cAClFhI,IAAA,CAACxC,GAAG,EAACuD,EAAE,CAAE,CAAE6G,MAAM,CAAE,GAAI,CAAE,CAAApH,QAAA,cACvBR,IAAA,CAACb,GAAG,EAACmG,IAAI,CAAEW,mBAAmB,CAAC,CAAE,CAAC4B,OAAO,CAAE,CAAEC,mBAAmB,CAAE,KAAM,CAAE,CAAE,CAAC,CAC1E,CAAC,cAEN9H,IAAA,CAACvC,UAAU,EAAA+C,QAAA,CAAC,wCAAsC,CAAY,CAC/D,EACU,CAAC,CACV,CAAC,CACH,CAAC,cAEPR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,EAAG,CAACK,EAAE,CAAE,CAAE,CAAAvH,QAAA,cACvBR,IAAA,CAACtC,IAAI,EAAA8C,QAAA,cACHN,KAAA,CAACvC,WAAW,EAAA6C,QAAA,eACVR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAAnH,QAAA,CAAC,mCAEtC,CAAY,CAAC,CACZkC,eAAe,SAAfA,eAAe,WAAfA,eAAe,CAAEuF,eAAe,EAAIvF,eAAe,CAACuF,eAAe,CAACD,MAAM,CAAG,CAAC,cAC7EhI,IAAA,CAAC/B,IAAI,EAAAuC,QAAA,CACFkC,eAAe,CAACuF,eAAe,CAACrC,GAAG,CAAC,CAACsC,cAAmB,CAAExH,KAAa,gBACtER,KAAA,CAAChC,QAAQ,EAAaiK,OAAO,CAAEzH,KAAK,CAAGgC,eAAe,CAACuF,eAAe,CAACD,MAAM,CAAG,CAAE,CAAAxH,QAAA,eAChFR,IAAA,CAAC7B,YAAY,EAAAqC,QAAA,cACXR,IAAA,CAACxB,YAAY,EAAC0I,KAAK,CAAC,OAAO,CAAE,CAAC,CAClB,CAAC,cACflH,IAAA,CAAC5B,YAAY,EACXgK,OAAO,CAAEF,cAAc,CAACA,cAAe,CACvCG,SAAS,CAAEH,cAAc,CAACI,OAAQ,CAClCC,sBAAsB,CAAE,CAAEtB,UAAU,CAAE,QAAS,CAAE,CAClD,CAAC,GARWvG,KASL,CACX,CAAC,CACE,CAAC,cAEPV,IAAA,CAACvC,UAAU,EAAA+C,QAAA,CAAC,8BAA4B,CAAY,CACrD,EACU,CAAC,CACV,CAAC,CACH,CAAC,EACH,CAAC,CACC,CAAC,cAGXR,IAAA,CAACM,QAAQ,EAACG,KAAK,CAAEyB,SAAU,CAACxB,KAAK,CAAE,CAAE,CAAAF,QAAA,cACnCN,KAAA,CAACtC,IAAI,EAAC2J,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAhH,QAAA,eACzBR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,EAAG,CAACK,EAAE,CAAE,CAAE,CAAAvH,QAAA,cACvBR,IAAA,CAACtC,IAAI,EAAA8C,QAAA,cACHN,KAAA,CAACvC,WAAW,EAAA6C,QAAA,eACVR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAAnH,QAAA,CAAC,gBAEtC,CAAY,CAAC,CACZoC,WAAW,cACV1C,KAAA,CAAAE,SAAA,EAAAI,QAAA,eACEN,KAAA,CAACtC,IAAI,EAAC2J,SAAS,MAACC,OAAO,CAAE,CAAE,CAACzG,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAE,CAAE,CAAAxB,QAAA,eACxCR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAlH,QAAA,cACfN,KAAA,CAAC1C,GAAG,EAACuD,EAAE,CAAE,CAAEyH,CAAC,CAAE,CAAC,CAAEC,OAAO,CAAE,kBAAkB,CAAEC,YAAY,CAAE,CAAE,CAAE,CAAAlI,QAAA,eAC9DR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,UAAU,CAACE,KAAK,CAAC,gBAAgB,CAAA1G,QAAA,CAAC,iBAAe,CAAY,CAAC,cAClFN,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACE,KAAK,CAAC,SAAS,CAACD,UAAU,CAAC,MAAM,CAAAzG,QAAA,EAAC,QACxD,CAACoC,WAAW,CAAC+F,eAAe,CAACC,cAAc,CAAC,CAAC,EACpC,CAAC,cACb1I,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,OAAO,CAAAxG,QAAA,EAAC,GACzB,CAACoC,WAAW,CAACiG,uBAAuB,CAAC,cACxC,EAAY,CAAC,EACV,CAAC,CACF,CAAC,cACP7I,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAlH,QAAA,cACfN,KAAA,CAAC1C,GAAG,EAACuD,EAAE,CAAE,CAAEyH,CAAC,CAAE,CAAC,CAAEC,OAAO,CAAE,kBAAkB,CAAEC,YAAY,CAAE,CAAE,CAAE,CAAAlI,QAAA,eAC9DR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,UAAU,CAACE,KAAK,CAAC,gBAAgB,CAAA1G,QAAA,CAAC,gBAAc,CAAY,CAAC,cACjFN,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACE,KAAK,CAAC,cAAc,CAACD,UAAU,CAAC,MAAM,CAAAzG,QAAA,EAAC,QAC7D,CAACoC,WAAW,CAACkG,aAAa,CAACF,cAAc,CAAC,CAAC,EAClC,CAAC,cACb1I,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,OAAO,CAAAxG,QAAA,EAAC,GACzB,CAACoC,WAAW,CAACmG,cAAc,CAAC,cAC/B,EAAY,CAAC,EACV,CAAC,CACF,CAAC,EACH,CAAC,cAEP7I,KAAA,CAAC5B,KAAK,EAACwD,QAAQ,CAAEc,WAAW,CAACoG,WAAW,CAAG,CAAC,CAAG,SAAS,CAAG,SAAU,CAACjI,EAAE,CAAE,CAAEkI,EAAE,CAAE,CAAE,CAAE,CAAAzI,QAAA,eAClFR,IAAA,CAACzB,UAAU,EAAAiC,QAAA,CACRoC,WAAW,CAACoG,WAAW,CAAG,CAAC,CACxB,gBAAgB,CAAGpG,WAAW,CAACoG,WAAW,CAACJ,cAAc,CAAC,CAAC,CAC3D,qCAAqC,CAC/B,CAAC,CACZhG,WAAW,CAACoG,WAAW,CAAG,CAAC,CACxB,yDAAyD,CACzD,iDAAiD,EAChD,CAAC,cAER9I,KAAA,CAAC1C,GAAG,EAACuD,EAAE,CAAE,CAAEkI,EAAE,CAAE,CAAE,CAAE,CAAAzI,QAAA,eACjBN,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,WAAW,CAACW,YAAY,MAACV,UAAU,CAAC,QAAQ,CAAAzG,QAAA,EAAC,6BACzC,CAACoC,WAAW,CAACsG,qBAAqB,CAACN,cAAc,CAAC,CAAC,EAC/D,CAAC,cACb1I,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,OAAO,CAACE,KAAK,CAAC,gBAAgB,CAACS,YAAY,MAAAnH,QAAA,EAAC,6BACnC,CAACoC,WAAW,CAACuG,wBAAwB,CAAC,SACnE,EAAY,CAAC,EACV,CAAC,EACN,CAAC,cAEHnJ,IAAA,CAACvC,UAAU,EAAA+C,QAAA,CAAC,gCAA8B,CAAY,CACvD,EACU,CAAC,CACV,CAAC,CACH,CAAC,cAEPR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,EAAG,CAACK,EAAE,CAAE,CAAE,CAAAvH,QAAA,cACvBR,IAAA,CAACtC,IAAI,EAAA8C,QAAA,cACHN,KAAA,CAACvC,WAAW,EAAA6C,QAAA,eACVR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAAnH,QAAA,CAAC,oBAEtC,CAAY,CAAC,CACZoC,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEwG,UAAU,EAAIxG,WAAW,CAACwG,UAAU,CAACpB,MAAM,CAAG,CAAC,cAC3DhI,IAAA,CAAC/B,IAAI,EAAAuC,QAAA,CACFoC,WAAW,CAACwG,UAAU,CAACxD,GAAG,CAAC,CAACyD,QAAa,CAAE3I,KAAa,gBACvDR,KAAA,CAAChC,QAAQ,EAAaiK,OAAO,CAAEzH,KAAK,CAAGkC,WAAW,CAACwG,UAAU,CAACpB,MAAM,CAAG,CAAE,CAAAxH,QAAA,eACvER,IAAA,CAAC7B,YAAY,EAAAqC,QAAA,cACXR,IAAA,CAACvB,OAAO,EAACyI,KAAK,CAAC,SAAS,CAAE,CAAC,CACf,CAAC,cACflH,IAAA,CAAC5B,YAAY,EACXgK,OAAO,CAAEiB,QAAQ,CAACC,IAAK,CACvBjB,SAAS,cACPnI,KAAA,CAAAE,SAAA,EAAAI,QAAA,EACG6I,QAAQ,CAACxH,WAAW,cACrB3B,KAAA,CAAC1C,GAAG,EAACuD,EAAE,CAAE,CAAEkI,EAAE,CAAE,CAAE,CAAE,CAAAzI,QAAA,eACjBR,IAAA,CAAC3B,IAAI,EACHkL,IAAI,CAAC,OAAO,CACZlE,KAAK,CAAE,WAAWgE,QAAQ,CAACG,gBAAgB,EAAG,CAC9CtC,KAAK,CAAC,SAAS,CACfF,OAAO,CAAC,UAAU,CAClBjG,EAAE,CAAE,CAAE0I,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACFzJ,IAAA,CAAC3B,IAAI,EACHkL,IAAI,CAAC,OAAO,CACZlE,KAAK,CAAE,eAAegE,QAAQ,CAACK,UAAU,EAAG,CAC5CxC,KAAK,CAAEmC,QAAQ,CAACK,UAAU,GAAK,MAAM,CAAG,SAAS,CAAIL,QAAQ,CAACK,UAAU,GAAK,QAAQ,CAAG,SAAS,CAAG,OAAS,CAC7G1C,OAAO,CAAC,UAAU,CACnB,CAAC,EACC,CAAC,EACN,CACH,CACDuB,sBAAsB,CAAE,CAAEtB,UAAU,CAAE,QAAS,CAAE,CAClD,CAAC,GA3BWvG,KA4BL,CACX,CAAC,CACE,CAAC,cAEPV,IAAA,CAACvC,UAAU,EAAA+C,QAAA,CAAC,iCAA+B,CAAY,CACxD,EACU,CAAC,CACV,CAAC,CACH,CAAC,EACH,CAAC,CACC,CAAC,cAGXR,IAAA,CAACM,QAAQ,EAACG,KAAK,CAAEyB,SAAU,CAACxB,KAAK,CAAE,CAAE,CAAAF,QAAA,cACnCN,KAAA,CAACtC,IAAI,EAAC2J,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAhH,QAAA,eACzBR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,EAAG,CAACK,EAAE,CAAE,CAAE,CAAAvH,QAAA,cACvBR,IAAA,CAACtC,IAAI,EAAA8C,QAAA,cACHN,KAAA,CAACvC,WAAW,EAAA6C,QAAA,eACVR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAAnH,QAAA,CAAC,cAEtC,CAAY,CAAC,CACZsC,cAAc,SAAdA,cAAc,WAAdA,cAAc,CAAE6G,YAAY,cAC3BzJ,KAAA,CAAAE,SAAA,EAAAI,QAAA,eACEN,KAAA,CAAC1C,GAAG,EAACuD,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAE,CAAE,CAAAxB,QAAA,eACjBR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,WAAW,CAACW,YAAY,MAAAnH,QAAA,CAAC,wBAE7C,CAAY,CAAC,cACbN,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACE,KAAK,CAAC,cAAc,CAACD,UAAU,CAAC,MAAM,CAAAzG,QAAA,EAAC,QAC7D,CAACsC,cAAc,CAAC6G,YAAY,CAACC,sBAAsB,CAAChB,cAAc,CAAC,CAAC,EAC3D,CAAC,cACb5I,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,OAAO,CAACE,KAAK,CAAC,gBAAgB,CAAA1G,QAAA,CAC/CsC,cAAc,CAAC6G,YAAY,CAACE,WAAW,CAC9B,CAAC,EACV,CAAC,cAEN3J,KAAA,CAAC5B,KAAK,EAACwD,QAAQ,CAAC,MAAM,CAACf,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAE,CAAE,CAAAxB,QAAA,eACnCR,IAAA,CAACzB,UAAU,EAAAiC,QAAA,CAAC,yBAAuB,CAAY,CAAC,SAC/C,CAACsC,cAAc,CAAC6G,YAAY,CAACG,uBAAuB,CAAClB,cAAc,CAAC,CAAC,EACjE,CAAC,EACR,CAAC,cAEH5I,IAAA,CAACvC,UAAU,EAAA+C,QAAA,CAAC,2BAAyB,CAAY,CAClD,EACU,CAAC,CACV,CAAC,CACH,CAAC,cAEPR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,EAAG,CAACK,EAAE,CAAE,CAAE,CAAAvH,QAAA,cACvBR,IAAA,CAACtC,IAAI,EAAA8C,QAAA,cACHN,KAAA,CAACvC,WAAW,EAAA6C,QAAA,eACVR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAAnH,QAAA,CAAC,8BAEtC,CAAY,CAAC,CACZsC,cAAc,SAAdA,cAAc,WAAdA,cAAc,CAAEiH,eAAe,EAAIjH,cAAc,CAACiH,eAAe,CAAC/B,MAAM,CAAG,CAAC,cAC3EhI,IAAA,CAAC/B,IAAI,EAAAuC,QAAA,CACFsC,cAAc,CAACiH,eAAe,CAACnE,GAAG,CAAC,CAACoE,UAAe,CAAEtJ,KAAa,gBACjER,KAAA,CAAChC,QAAQ,EAAaiK,OAAO,CAAEzH,KAAK,CAAGoC,cAAc,CAACiH,eAAe,CAAC/B,MAAM,CAAG,CAAE,CAAAxH,QAAA,eAC/ER,IAAA,CAAC7B,YAAY,EAAAqC,QAAA,cACXR,IAAA,CAACtB,SAAS,EAACwI,KAAK,CAAC,SAAS,CAAE,CAAC,CACjB,CAAC,cACflH,IAAA,CAAC5B,YAAY,EACXgK,OAAO,CAAE4B,UAAU,CAACpI,KAAM,CAC1ByG,SAAS,cACPnI,KAAA,CAAAE,SAAA,EAAAI,QAAA,EACGwJ,UAAU,CAACnI,WAAW,cACvB3B,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,OAAO,CAACE,KAAK,CAAC,cAAc,CAACnG,EAAE,CAAE,CAAEkI,EAAE,CAAE,CAAE,CAAE,CAAAzI,QAAA,EAAC,2BAC1C,CAACwJ,UAAU,CAACC,iBAAiB,CAACrB,cAAc,CAAC,CAAC,EACxD,CAAC,EACb,CACH,CACDL,sBAAsB,CAAE,CAAEtB,UAAU,CAAE,QAAS,CAAE,CAClD,CAAC,GAfWvG,KAgBL,CACX,CAAC,CACE,CAAC,cAEPV,IAAA,CAACvC,UAAU,EAAA+C,QAAA,CAAC,8BAA4B,CAAY,CACrD,EACU,CAAC,CACV,CAAC,CACH,CAAC,EACH,CAAC,CACC,CAAC,cAGXR,IAAA,CAACM,QAAQ,EAACG,KAAK,CAAEyB,SAAU,CAACxB,KAAK,CAAE,CAAE,CAAAF,QAAA,cACnCN,KAAA,CAACtC,IAAI,EAAC2J,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAhH,QAAA,eACzBR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,EAAG,CAACK,EAAE,CAAE,CAAE,CAAAvH,QAAA,cACvBR,IAAA,CAACtC,IAAI,EAAA8C,QAAA,cACHN,KAAA,CAACvC,WAAW,EAAA6C,QAAA,eACVR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAAnH,QAAA,CAAC,0BAEtC,CAAY,CAAC,CACZwC,aAAa,SAAbA,aAAa,WAAbA,aAAa,CAAEkH,eAAe,cAC7BhK,KAAA,CAAAE,SAAA,EAAAI,QAAA,eACER,IAAA,CAACxC,GAAG,EAACuD,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAE,CAAE,CAAAxB,QAAA,cACjBN,KAAA,CAACtC,IAAI,EAAC2J,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAhH,QAAA,eACzBR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAlH,QAAA,cACfN,KAAA,CAAC1C,GAAG,EAACuD,EAAE,CAAE,CAAEyH,CAAC,CAAE,CAAC,CAAEC,OAAO,CAAE,kBAAkB,CAAEC,YAAY,CAAE,CAAE,CAAE,CAAAlI,QAAA,eAC9DR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,UAAU,CAACE,KAAK,CAAC,gBAAgB,CAAA1G,QAAA,CAAC,qBAAmB,CAAY,CAAC,cACtFN,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACE,KAAK,CAAC,SAAS,CAACD,UAAU,CAAC,MAAM,CAAAzG,QAAA,EAAC,QACxD,CAACwC,aAAa,CAACkH,eAAe,CAACC,sBAAsB,CAACvB,cAAc,CAAC,CAAC,EAC7D,CAAC,EACV,CAAC,CACF,CAAC,cACP5I,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,CAAE,CAAAlH,QAAA,cACfN,KAAA,CAAC1C,GAAG,EAACuD,EAAE,CAAE,CAAEyH,CAAC,CAAE,CAAC,CAAEC,OAAO,CAAE,kBAAkB,CAAEC,YAAY,CAAE,CAAE,CAAE,CAAAlI,QAAA,eAC9DR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,UAAU,CAACE,KAAK,CAAC,gBAAgB,CAAA1G,QAAA,CAAC,uBAAqB,CAAY,CAAC,cACxFN,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACE,KAAK,CAAC,YAAY,CAACD,UAAU,CAAC,MAAM,CAAAzG,QAAA,EAAC,QAC3D,CAACwC,aAAa,CAACkH,eAAe,CAACE,wBAAwB,CAACxB,cAAc,CAAC,CAAC,EAC/D,CAAC,EACV,CAAC,CACF,CAAC,EACH,CAAC,CACJ,CAAC,cAEN1I,KAAA,CAAC5B,KAAK,EAACwD,QAAQ,CAAC,SAAS,CAACf,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAE,CAAE,CAAAxB,QAAA,eACtCR,IAAA,CAACzB,UAAU,EAAAiC,QAAA,CAAC,8BAA4B,CAAY,CAAC,CACpDwC,aAAa,CAACkH,eAAe,CAACG,iBAAiB,CAACrC,MAAM,CAAG,CAAC,CACvD,wCAAwC,CAAGhF,aAAa,CAACkH,eAAe,CAACG,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC,CACrG,6EAA6E,EAE5E,CAAC,cAERtK,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,WAAW,CAACW,YAAY,MAACV,UAAU,CAAC,QAAQ,CAAAzG,QAAA,CAAC,4BAEjE,CAAY,CAAC,cACbN,KAAA,CAACzC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACE,KAAK,CAAC,cAAc,CAACD,UAAU,CAAC,MAAM,CAAAzG,QAAA,EAAC,QAC7D,CAACwC,aAAa,CAACkH,eAAe,CAAChB,qBAAqB,CAACN,cAAc,CAAC,CAAC,EAC5D,CAAC,cACb5I,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,OAAO,CAACE,KAAK,CAAC,gBAAgB,CAAA1G,QAAA,CAAC,2DAEnD,CAAY,CAAC,EACb,CAAC,cAEHR,IAAA,CAACvC,UAAU,EAAA+C,QAAA,CAAC,uCAAqC,CAAY,CAC9D,EACU,CAAC,CACV,CAAC,CACH,CAAC,cAEPR,IAAA,CAACpC,IAAI,EAAC6J,IAAI,MAACC,EAAE,CAAE,EAAG,CAACK,EAAE,CAAE,CAAE,CAAAvH,QAAA,cACvBR,IAAA,CAACtC,IAAI,EAAA8C,QAAA,cACHN,KAAA,CAACvC,WAAW,EAAA6C,QAAA,eACVR,IAAA,CAACvC,UAAU,EAACuJ,OAAO,CAAC,IAAI,CAACW,YAAY,MAAAnH,QAAA,CAAC,8BAEtC,CAAY,CAAC,CACZwC,aAAa,SAAbA,aAAa,WAAbA,aAAa,CAAEoG,UAAU,EAAIpG,aAAa,CAACoG,UAAU,CAACpB,MAAM,CAAG,CAAC,cAC/DhI,IAAA,CAAC/B,IAAI,EAAAuC,QAAA,CACFwC,aAAa,CAACoG,UAAU,CAACxD,GAAG,CAAC,CAACyD,QAAa,CAAE3I,KAAa,gBACzDR,KAAA,CAAChC,QAAQ,EAAaiK,OAAO,CAAEzH,KAAK,CAAGsC,aAAa,CAACoG,UAAU,CAACpB,MAAM,CAAG,CAAE,CAAAxH,QAAA,eACzER,IAAA,CAAC7B,YAAY,EAAAqC,QAAA,cACXR,IAAA,CAACrB,aAAa,EAACuI,KAAK,CAAC,SAAS,CAAE,CAAC,CACrB,CAAC,cACflH,IAAA,CAAC5B,YAAY,EACXgK,OAAO,CAAEiB,QAAQ,CAACzH,KAAM,CACxByG,SAAS,cACPnI,KAAA,CAAAE,SAAA,EAAAI,QAAA,EACG6I,QAAQ,CAACxH,WAAW,cACrB3B,KAAA,CAAC1C,GAAG,EAACuD,EAAE,CAAE,CAAEkI,EAAE,CAAE,CAAE,CAAE,CAAAzI,QAAA,eACjBR,IAAA,CAAC3B,IAAI,EACHkL,IAAI,CAAC,OAAO,CACZlE,KAAK,CAAE,WAAWgE,QAAQ,CAACkB,MAAM,EAAG,CACpCrD,KAAK,CAAEmC,QAAQ,CAACkB,MAAM,GAAK,MAAM,CAAG,SAAS,CAAIlB,QAAQ,CAACkB,MAAM,GAAK,QAAQ,CAAG,SAAS,CAAG,SAAW,CACvGvD,OAAO,CAAC,UAAU,CAClBjG,EAAE,CAAE,CAAE0I,EAAE,CAAE,CAAE,CAAE,CACf,CAAC,cACFzJ,IAAA,CAAC3B,IAAI,EACHkL,IAAI,CAAC,OAAO,CACZlE,KAAK,CAAE,aAAagE,QAAQ,CAACmB,QAAQ,EAAG,CACxCtD,KAAK,CAAC,SAAS,CACfF,OAAO,CAAC,UAAU,CACnB,CAAC,EACC,CAAC,EACN,CACH,CACDuB,sBAAsB,CAAE,CAAEtB,UAAU,CAAE,QAAS,CAAE,CAClD,CAAC,GA3BWvG,KA4BL,CACX,CAAC,CACE,CAAC,cAEPV,IAAA,CAACvC,UAAU,EAAA+C,QAAA,CAAC,2CAAyC,CAAY,CAClE,EACU,CAAC,CACV,CAAC,CACH,CAAC,EACH,CAAC,CACC,CAAC,EAGX,CACH,cAGDR,IAAA,CAACxC,GAAG,EAACuD,EAAE,CAAE,CAAEkI,EAAE,CAAE,CAAC,CAAEpC,OAAO,CAAE,MAAM,CAAEE,cAAc,CAAE,QAAS,CAAE,CAAAvG,QAAA,cAC5DR,IAAA,CAACnC,MAAM,EACLmJ,OAAO,CAAC,WAAW,CACnBE,KAAK,CAAC,SAAS,CACfuD,OAAO,CAAE7G,gBAAiB,CAC1B8G,QAAQ,CAAEtI,OAAO,EAAI,CAACc,WAAY,CAClCyH,SAAS,CAAEvI,OAAO,cAAGpC,IAAA,CAAClC,gBAAgB,EAACyL,IAAI,CAAE,EAAG,CAAE,CAAC,CAAGqB,SAAU,CAAApK,QAAA,CAE/D4B,OAAO,CAAG,eAAe,CAAG,kBAAkB,CACzC,CAAC,CACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}